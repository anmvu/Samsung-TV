main.MessageBox = function(config){	this.addEvent(["open", "close"]);	var that = this;	$.each(config, function(i, v){		that[i] = config[i];	});	main.MessageBox.superclass.constructor.call(this, config);};main.extend(main.MessageBox, main.Component, {		idPrefix: "msgbox-",		templateEl: '<div id="#{ID}" title="#{TITLE}" class="msgbox"><span class="ui-icon #{ICON}"></span><span style="font-size:16px;">#{TEXT}</span></div>',	templateTX: '<span class="ui-icon #{ICON}"></span><span style="font-size:16px;">#{TEXT}</span>',	init: function(){		main.MessageBox.superclass.init.call(this);		$("body").append(this.templateEl.replace("#{ID}", this.id).replace("#{TITLE}", this.title).replace("#{ICON}", this.icon || "ui-icon-alert").replace("#{TEXT}", this.text));		this.dialog = $("#"+this.id).dialog({			disabled: true,			modal: true,			autoOpen: false,			resizable: false,			buttons: this.buttons		});				var that = this;		this.dialog.bind( "dialogclose", function(event, ui) {			that.fireEvent("close", that);		});	},		setTitle: function(tl){		this.title = tl;		$("#" + this.id).attr("title", this.title);	},		setText: function(tx){		this.text = tx;		$("#" + this.id).html(this.templateTX.replace("#{TEXT}", this.text).replace("#{ICON}", this.icon || "ui-icon-alert"));	},		open: function(){		this.dialog.dialog("open");		this.fireEvent("open", this);	},		close: function(){		this.dialog.dialog("close");	}});