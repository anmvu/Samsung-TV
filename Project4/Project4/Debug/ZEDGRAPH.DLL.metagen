  ZedGraph.ZedGraph.ZedGraphLocale.tw.resources - Embedded, ContainedInManifestFile, 
  ZedGraph.ZedGraph.ZedGraphLocale.resources - Embedded, ContainedInManifestFile, 
  ZedGraph.ZedGraph.ZedGraphControl.resources - Embedded, ContainedInManifestFile, 
ImageRuntimeVersion: v2.0.50727
Assembly ZedGraph, Version=5.1.5.28844, Culture=neutral, PublicKeyToken=02a83cbd123fcd60: 
	hash=SHA1, flags=PublicKey
Assembly System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Assembly System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Class ZedGraph.ZedGraphControl: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.UserControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Windows.Forms.MouseButtons ZoomButtons 'get set' : 
    System.Windows.Forms.MouseButtons ZoomButtons2 'get set' : 
    System.Windows.Forms.Keys ZoomModifierKeys 'get set' : 
    System.Windows.Forms.Keys ZoomModifierKeys2 'get set' : 
    System.Windows.Forms.MouseButtons PanButtons 'get set' : 
    System.Windows.Forms.MouseButtons PanButtons2 'get set' : 
    System.Windows.Forms.Keys PanModifierKeys 'get set' : 
    System.Windows.Forms.Keys PanModifierKeys2 'get set' : 
    System.Windows.Forms.MouseButtons EditButtons 'get set' : 
    System.Windows.Forms.Keys EditModifierKeys 'get set' : 
    System.Windows.Forms.MouseButtons SelectButtons 'get set' : 
    System.Windows.Forms.Keys SelectModifierKeys 'get set' : 
    System.Windows.Forms.Keys SelectAppendModifierKeys 'get ' : 
    System.Windows.Forms.MouseButtons LinkButtons 'get set' : 
    System.Windows.Forms.Keys LinkModifierKeys 'get set' : 
    ZedGraph.MasterPane MasterPane 'get set' : 
    ZedGraph.GraphPane GraphPane 'get set' : 
    Boolean IsAntiAlias 'get set' : 
    Boolean IsShowPointValues 'get set' : 
    Boolean IsShowCursorValues 'get set' : 
    Boolean IsEnableHEdit 'get set' : 
    Boolean IsEnableVEdit 'get set' : 
    Boolean IsEnableZoom 'set' : 
    Boolean IsEnableHZoom 'get set' : 
    Boolean IsEnableVZoom 'get set' : 
    Boolean IsEnableWheelZoom 'get set' : 
    Boolean IsEnableHPan 'get set' : 
    Boolean IsEnableVPan 'get set' : 
    Boolean IsShowContextMenu 'get set' : 
    Boolean IsShowCopyMessage 'get set' : 
    System.Windows.Forms.SaveFileDialog SaveFileDialog 'get set' : 
    Boolean IsPrintKeepAspectRatio 'get set' : 
    Boolean IsPrintFillPage 'get set' : 
    Boolean IsPrintScaleAll 'get set' : 
    Boolean IsAutoScrollRange 'get set' : 
    Double ScrollGrace 'get set' : 
    Boolean IsShowHScrollBar 'get set' : 
    Boolean IsShowVScrollBar 'get set' : 
    Boolean IsSynchronizeXAxes 'get set' : 
    Boolean IsSynchronizeYAxes 'get set' : 
    Boolean IsScrollY2 'get set' : 
    ZedGraph.ScrollRangeList YScrollRangeList 'get ' : 
    ZedGraph.ScrollRangeList Y2ScrollRangeList 'get ' : 
    Double ScrollMinX 'get set' : 
    Double ScrollMaxX 'get set' : 
    Double ScrollMinY 'get set' : 
    Double ScrollMaxY 'get set' : 
    Double ScrollMinY2 'get set' : 
    Double ScrollMaxY2 'get set' : 
    Boolean IsScrolling 'get ' : 
    System.String PointValueFormat 'get set' : 
    System.String PointDateFormat 'get set' : 
    Double ZoomStepFraction 'get set' : 
    Boolean IsZoomOnMouseCenter 'get set' : 
    Boolean BeenDisposed 'get ' : 
    ZedGraph.Selection Selection 'get ' : 
    Boolean IsEnableSelection 'get set' : 
    System.Drawing.Printing.PrintDocument PrintDocument 'get set' : 
  Events:
    ContextMenuBuilderEventHandler ContextMenuBuilder: 
    ZoomEventHandler ZoomEvent: 
    ScrollDoneHandler ScrollDoneEvent: 
    ScrollProgressHandler ScrollProgressEvent: 
    System.Windows.Forms.ScrollEventHandler ScrollEvent: 
    PointEditHandler PointEditEvent: 
    PointValueHandler PointValueEvent: 
    CursorValueHandler CursorValueEvent: 
    ZedMouseEventHandler MouseDownEvent: 
    System.Windows.Forms.MouseEventHandler MouseDown: 
    System.Windows.Forms.MouseEventHandler MouseUp: 
    ZedMouseEventHandler MouseUpEvent: 
    ZedMouseEventHandler MouseMoveEvent: 
    ZedMouseEventHandler DoubleClickEvent: 
    LinkEventHandler LinkEvent: 
  Methods:
    AxisChange(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetScrollRangeFromData(): PrivateScope, Public, HideBySig
    get_PrintDocument(): PrivateScope, Public, HideBySig, SpecialName
    set_PrintDocument(PrintDocument): PrivateScope, Public, HideBySig, SpecialName
    DoPageSetup(): PrivateScope, Public, HideBySig
    DoPrint(): PrivateScope, Public, HideBySig
    DoPrintPreview(): PrivateScope, Public, HideBySig
    Copy(Boolean): PrivateScope, Public, HideBySig
    CopyEmf(Boolean): PrivateScope, Public, HideBySig
    SaveAs(): PrivateScope, Public, HideBySig
    SaveAs(String): PrivateScope, Public, HideBySig
    SaveAsBitmap(): PrivateScope, Public, HideBySig
    SaveAsEmf(): PrivateScope, Public, HideBySig
    RestoreScale(GraphPane): PrivateScope, Public, HideBySig
    ZoomOut(GraphPane): PrivateScope, Public, HideBySig
    ZoomOutAll(GraphPane): PrivateScope, Public, HideBySig
    set_ScrollMaxX(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ScrollMinY(): PrivateScope, Public, HideBySig, SpecialName
    set_ScrollMinY(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ScrollMaxY(): PrivateScope, Public, HideBySig, SpecialName
    set_ScrollMaxY(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ScrollMinY2(): PrivateScope, Public, HideBySig, SpecialName
    set_ScrollMinY2(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ScrollMaxY2(): PrivateScope, Public, HideBySig, SpecialName
    set_ScrollMaxY2(Double): PrivateScope, Public, HideBySig, SpecialName
    get_IsScrolling(): PrivateScope, Public, HideBySig, SpecialName
    get_PointValueFormat(): PrivateScope, Public, HideBySig, SpecialName
    set_PointValueFormat(String): PrivateScope, Public, HideBySig, SpecialName
    get_PointDateFormat(): PrivateScope, Public, HideBySig, SpecialName
    set_PointDateFormat(String): PrivateScope, Public, HideBySig, SpecialName
    get_ZoomStepFraction(): PrivateScope, Public, HideBySig, SpecialName
    set_ZoomStepFraction(Double): PrivateScope, Public, HideBySig, SpecialName
    get_IsZoomOnMouseCenter(): PrivateScope, Public, HideBySig, SpecialName
    set_IsZoomOnMouseCenter(Boolean): PrivateScope, Public, HideBySig, SpecialName
    GetImage(): PrivateScope, Public, HideBySig
    get_BeenDisposed(): PrivateScope, Public, HideBySig, SpecialName
    get_Selection(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEnableSelection(): PrivateScope, Public, HideBySig, SpecialName
    set_IsEnableSelection(Boolean): PrivateScope, Public, HideBySig, SpecialName
    add_ContextMenuBuilder(ContextMenuBuilderEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ContextMenuBuilder(ContextMenuBuilderEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_ZoomEvent(ZoomEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ZoomEvent(ZoomEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_ScrollDoneEvent(ScrollDoneHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ScrollDoneEvent(ScrollDoneHandler): PrivateScope, Public, HideBySig, SpecialName
    add_ScrollProgressEvent(ScrollProgressHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ScrollProgressEvent(ScrollProgressHandler): PrivateScope, Public, HideBySig, SpecialName
    add_ScrollEvent(ScrollEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ScrollEvent(ScrollEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_PointEditEvent(PointEditHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_PointEditEvent(PointEditHandler): PrivateScope, Public, HideBySig, SpecialName
    add_PointValueEvent(PointValueHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_PointValueEvent(PointValueHandler): PrivateScope, Public, HideBySig, SpecialName
    add_CursorValueEvent(CursorValueHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_CursorValueEvent(CursorValueHandler): PrivateScope, Public, HideBySig, SpecialName
    add_MouseDownEvent(ZedMouseEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_MouseDownEvent(ZedMouseEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_MouseDown(MouseEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_MouseDown(MouseEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_MouseUp(MouseEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_MouseUp(MouseEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_MouseUpEvent(ZedMouseEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_MouseUpEvent(ZedMouseEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_MouseMoveEvent(ZedMouseEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_MouseMoveEvent(ZedMouseEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_DoubleClickEvent(ZedMouseEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_DoubleClickEvent(ZedMouseEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_LinkEvent(LinkEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_LinkEvent(LinkEventHandler): PrivateScope, Public, HideBySig, SpecialName
    ZoomPane(GraphPane, Double, PointF, Boolean): PrivateScope, Public, HideBySig
    get_ZoomButtons(): PrivateScope, Public, HideBySig, SpecialName
    set_ZoomButtons(MouseButtons): PrivateScope, Public, HideBySig, SpecialName
    get_ZoomButtons2(): PrivateScope, Public, HideBySig, SpecialName
    set_ZoomButtons2(MouseButtons): PrivateScope, Public, HideBySig, SpecialName
    get_ZoomModifierKeys(): PrivateScope, Public, HideBySig, SpecialName
    set_ZoomModifierKeys(Keys): PrivateScope, Public, HideBySig, SpecialName
    get_ZoomModifierKeys2(): PrivateScope, Public, HideBySig, SpecialName
    set_ZoomModifierKeys2(Keys): PrivateScope, Public, HideBySig, SpecialName
    get_PanButtons(): PrivateScope, Public, HideBySig, SpecialName
    set_PanButtons(MouseButtons): PrivateScope, Public, HideBySig, SpecialName
    get_PanButtons2(): PrivateScope, Public, HideBySig, SpecialName
    set_PanButtons2(MouseButtons): PrivateScope, Public, HideBySig, SpecialName
    get_PanModifierKeys(): PrivateScope, Public, HideBySig, SpecialName
    set_PanModifierKeys(Keys): PrivateScope, Public, HideBySig, SpecialName
    get_PanModifierKeys2(): PrivateScope, Public, HideBySig, SpecialName
    set_PanModifierKeys2(Keys): PrivateScope, Public, HideBySig, SpecialName
    get_EditButtons(): PrivateScope, Public, HideBySig, SpecialName
    set_EditButtons(MouseButtons): PrivateScope, Public, HideBySig, SpecialName
    get_EditModifierKeys(): PrivateScope, Public, HideBySig, SpecialName
    set_EditModifierKeys(Keys): PrivateScope, Public, HideBySig, SpecialName
    get_SelectButtons(): PrivateScope, Public, HideBySig, SpecialName
    set_SelectButtons(MouseButtons): PrivateScope, Public, HideBySig, SpecialName
    get_SelectModifierKeys(): PrivateScope, Public, HideBySig, SpecialName
    set_SelectModifierKeys(Keys): PrivateScope, Public, HideBySig, SpecialName
    get_SelectAppendModifierKeys(): PrivateScope, Public, HideBySig, SpecialName
    get_LinkButtons(): PrivateScope, Public, HideBySig, SpecialName
    set_LinkButtons(MouseButtons): PrivateScope, Public, HideBySig, SpecialName
    get_LinkModifierKeys(): PrivateScope, Public, HideBySig, SpecialName
    set_LinkModifierKeys(Keys): PrivateScope, Public, HideBySig, SpecialName
    get_MasterPane(): PrivateScope, Public, HideBySig, SpecialName
    set_MasterPane(MasterPane): PrivateScope, Public, HideBySig, SpecialName
    get_GraphPane(): PrivateScope, Public, HideBySig, SpecialName
    set_GraphPane(GraphPane): PrivateScope, Public, HideBySig, SpecialName
    get_IsAntiAlias(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAntiAlias(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsShowPointValues(): PrivateScope, Public, HideBySig, SpecialName
    set_IsShowPointValues(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsShowCursorValues(): PrivateScope, Public, HideBySig, SpecialName
    set_IsShowCursorValues(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsEnableHEdit(): PrivateScope, Public, HideBySig, SpecialName
    set_IsEnableHEdit(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsEnableVEdit(): PrivateScope, Public, HideBySig, SpecialName
    set_IsEnableVEdit(Boolean): PrivateScope, Public, HideBySig, SpecialName
    set_IsEnableZoom(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsEnableHZoom(): PrivateScope, Public, HideBySig, SpecialName
    set_IsEnableHZoom(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsEnableVZoom(): PrivateScope, Public, HideBySig, SpecialName
    set_IsEnableVZoom(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsEnableWheelZoom(): PrivateScope, Public, HideBySig, SpecialName
    set_IsEnableWheelZoom(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsEnableHPan(): PrivateScope, Public, HideBySig, SpecialName
    set_IsEnableHPan(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsEnableVPan(): PrivateScope, Public, HideBySig, SpecialName
    set_IsEnableVPan(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsShowContextMenu(): PrivateScope, Public, HideBySig, SpecialName
    set_IsShowContextMenu(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsShowCopyMessage(): PrivateScope, Public, HideBySig, SpecialName
    set_IsShowCopyMessage(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SaveFileDialog(): PrivateScope, Public, HideBySig, SpecialName
    set_SaveFileDialog(SaveFileDialog): PrivateScope, Public, HideBySig, SpecialName
    get_IsPrintKeepAspectRatio(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPrintKeepAspectRatio(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsPrintFillPage(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPrintFillPage(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsPrintScaleAll(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPrintScaleAll(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsAutoScrollRange(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAutoScrollRange(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ScrollGrace(): PrivateScope, Public, HideBySig, SpecialName
    set_ScrollGrace(Double): PrivateScope, Public, HideBySig, SpecialName
    get_IsShowHScrollBar(): PrivateScope, Public, HideBySig, SpecialName
    set_IsShowHScrollBar(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsShowVScrollBar(): PrivateScope, Public, HideBySig, SpecialName
    set_IsShowVScrollBar(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsSynchronizeXAxes(): PrivateScope, Public, HideBySig, SpecialName
    set_IsSynchronizeXAxes(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsSynchronizeYAxes(): PrivateScope, Public, HideBySig, SpecialName
    set_IsSynchronizeYAxes(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsScrollY2(): PrivateScope, Public, HideBySig, SpecialName
    set_IsScrollY2(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_YScrollRangeList(): PrivateScope, Public, HideBySig, SpecialName
    get_Y2ScrollRangeList(): PrivateScope, Public, HideBySig, SpecialName
    get_ScrollMinX(): PrivateScope, Public, HideBySig, SpecialName
    set_ScrollMinX(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ScrollMaxX(): PrivateScope, Public, HideBySig, SpecialName
Class ZedGraph.ZedGraphControl+ContextMenuBuilderEventHandler: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(ZedGraphControl, ContextMenuStrip, Point, ContextMenuObjectState): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(ZedGraphControl, ContextMenuStrip, Point, ContextMenuObjectState, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class ZedGraph.ZedGraphControl+ZoomEventHandler: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(ZedGraphControl, ZoomState, ZoomState): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(ZedGraphControl, ZoomState, ZoomState, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class ZedGraph.ZedGraphControl+ScrollDoneHandler: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(ZedGraphControl, ScrollBar, ZoomState, ZoomState): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(ZedGraphControl, ScrollBar, ZoomState, ZoomState, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class ZedGraph.ZedGraphControl+ScrollProgressHandler: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(ZedGraphControl, ScrollBar, ZoomState, ZoomState): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(ZedGraphControl, ScrollBar, ZoomState, ZoomState, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class ZedGraph.ZedGraphControl+PointEditHandler: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(ZedGraphControl, GraphPane, CurveItem, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(ZedGraphControl, GraphPane, CurveItem, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class ZedGraph.ZedGraphControl+PointValueHandler: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(ZedGraphControl, GraphPane, CurveItem, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(ZedGraphControl, GraphPane, CurveItem, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class ZedGraph.ZedGraphControl+CursorValueHandler: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(ZedGraphControl, GraphPane, Point): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(ZedGraphControl, GraphPane, Point, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class ZedGraph.ZedGraphControl+ZedMouseEventHandler: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(ZedGraphControl, MouseEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(ZedGraphControl, MouseEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class ZedGraph.ZedGraphControl+LinkEventHandler: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(ZedGraphControl, GraphPane, Object, Link, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(ZedGraphControl, GraphPane, Object, Link, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct ZedGraph.ZedGraphControl+ContextMenuObjectState: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ContextMenuObjectState InactiveSelection = 0 : Public, Static, Literal, HasDefault
    ContextMenuObjectState ActiveSelection = 1 : Public, Static, Literal, HasDefault
    ContextMenuObjectState Background = 2 : Public, Static, Literal, HasDefault
Class ZedGraph.YAxisList: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Collections.Generic.List`1[ZedGraph.YAxis]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.YAxisList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Properties:
    ZedGraph.YAxis Item [Int32] 'get ' : 
    ZedGraph.YAxis Item [System.String] 'get ' : 
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    IndexOf(String): PrivateScope, Public, HideBySig
    IndexOfTag(String): PrivateScope, Public, HideBySig
    Add(String): PrivateScope, Public, HideBySig
Class ZedGraph.PointPairBase: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.PointF): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.PointPairBase): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
  Fields:
    Double X : Public
    Double Y : Public
    Double Missing = 1.79769313486232E+308 : Public, Static, Literal, HasDefault
    System.String DefaultFormat = G : Public, Static, Literal, HasDefault
    Int32 schema = 11 : Public, Static, Literal, HasDefault
  Properties:
    Boolean IsMissing 'get ' : 
    Boolean IsInvalid 'get ' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    get_IsMissing(): PrivateScope, Public, HideBySig, SpecialName
    get_IsInvalid(): PrivateScope, Public, HideBySig, SpecialName
    IsValueInvalid(Double): PrivateScope, Public, Static, HideBySig
    op_Implicit(PointPairBase): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String): PrivateScope, Public, HideBySig
    ToString(String, String): PrivateScope, Public, HideBySig
Class ZedGraph.PointPair: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.PointPairBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.PointF): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.PointPair): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Fields:
    Double Z : Public
    System.Object Tag : Public
    Int32 schema2 = 11 : Public, Static, Literal, HasDefault
  Properties:
    Boolean IsInvalid3D 'get ' : 
    Double LowValue 'get set' : 
    Double ColorValue 'get set' : 
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    get_IsInvalid3D(): PrivateScope, Public, HideBySig, SpecialName
    get_LowValue(): PrivateScope, Public, HideBySig, SpecialName
    set_LowValue(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ColorValue(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ColorValue(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToString(String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToString(String, String, String): PrivateScope, Public, HideBySig
Class ZedGraph.PointPair+PointPairComparerY: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IComparer`1[ZedGraph.PointPair]
  Methods:
    Compare(PointPair, PointPair): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class ZedGraph.PointPair+PointPairComparer: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(ZedGraph.SortType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IComparer`1[ZedGraph.PointPair]
  Methods:
    Compare(PointPair, PointPair): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class ZedGraph.StockPt: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.PointPair
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double, Double, Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.StockPt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.PointPair): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Double Open : Public
    Double Close : Public
    Double Vol : Public
    Int32 schema3 = 11 : Public, Static, Literal, HasDefault
  Properties:
    Double Date 'get set' : 
    Double High 'get set' : 
    Double Low 'get set' : 
    Double ColorValue 'get set' : 
    Boolean IsInvalid5D 'get ' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    get_Date(): PrivateScope, Public, HideBySig, SpecialName
    set_Date(Double): PrivateScope, Public, HideBySig, SpecialName
    get_High(): PrivateScope, Public, HideBySig, SpecialName
    set_High(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Low(): PrivateScope, Public, HideBySig, SpecialName
    set_Low(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ColorValue(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ColorValue(Double): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsInvalid5D(): PrivateScope, Public, HideBySig, SpecialName
    ToString(Boolean): PrivateScope, Public, Virtual, HideBySig
    ToString(String, Boolean): PrivateScope, Public, Virtual, HideBySig
Class ZedGraph.GraphObj: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, ZedGraph.CoordType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, ZedGraph.CoordType, ZedGraph.AlignH, ZedGraph.AlignV): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double, ZedGraph.CoordType, ZedGraph.AlignH, ZedGraph.AlignV): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.GraphObj): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
    System.ICloneable
  Fields:
    System.Object Tag : Public
    Int32 schema = 10 : Public, Static, Literal, HasDefault
  Properties:
    ZedGraph.Location Location 'get set' : 
    ZedGraph.ZOrder ZOrder 'get set' : 
    Boolean IsVisible 'get set' : 
    Boolean IsClippedToChartRect 'get set' : 
    ZedGraph.Link Link 'get set' : 
    Boolean IsInFrontOfData 'get ' : 
  Methods:
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(Location): PrivateScope, Public, HideBySig, SpecialName
    get_ZOrder(): PrivateScope, Public, HideBySig, SpecialName
    set_ZOrder(ZOrder): PrivateScope, Public, HideBySig, SpecialName
    get_IsVisible(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVisible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsClippedToChartRect(): PrivateScope, Public, HideBySig, SpecialName
    set_IsClippedToChartRect(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Link(): PrivateScope, Public, HideBySig, SpecialName
    set_Link(Link): PrivateScope, Public, HideBySig, SpecialName
    get_IsInFrontOfData(): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    Draw(Graphics, PaneBase, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    PointInBox(PointF, PaneBase, Graphics, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCoords(PaneBase, Graphics, Single, String&(Out), String&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct ZedGraph.GraphObj+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    ZedGraph.AlignV AlignV : Public, Static
    ZedGraph.AlignH AlignH : Public, Static
    ZedGraph.CoordType CoordFrame : Public, Static
    Boolean IsClippedToChartRect : Public, Static
Class ZedGraph.ZoomState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(ZedGraph.GraphPane, StateType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.ZoomState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Properties:
    StateType Type 'get ' : 
    System.String TypeString 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    get_TypeString(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    ApplyState(GraphPane): PrivateScope, Public, HideBySig
    IsChanged(GraphPane): PrivateScope, Public, HideBySig
Struct ZedGraph.ZoomState+StateType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    StateType Zoom = 0 : Public, Static, Literal, HasDefault
    StateType WheelZoom = 1 : Public, Static, Literal, HasDefault
    StateType Pan = 2 : Public, Static, Literal, HasDefault
    StateType Scroll = 3 : Public, Static, Literal, HasDefault
Class ZedGraph.ValueHandler: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(ZedGraph.GraphPane, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetValues(CurveItem, Int32, Double&(Out), Double&(Out), Double&(Out)): PrivateScope, Public, HideBySig
    GetValues(GraphPane, CurveItem, Int32, Double&(Out), Double&(Out), Double&(Out)): PrivateScope, Public, Static, HideBySig
    BarCenterValue(CurveItem, Single, Int32, Double, Int32): PrivateScope, Public, HideBySig
Class ZedGraph.CurveList: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Collections.Generic.List`1[ZedGraph.CurveItem]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.CurveList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Properties:
    Int32 MaxPts 'get ' : 
    Int32 NumBars 'get ' : 
    Int32 NumClusterableBars 'get ' : 
    Int32 NumPies 'get ' : 
    Boolean IsPieOnly 'get ' : 
    System.Collections.Generic.IEnumerable`1[ZedGraph.CurveItem] Backward 'get ' : 
    System.Collections.Generic.IEnumerable`1[ZedGraph.CurveItem] Forward 'get ' : 
    ZedGraph.CurveItem Item [System.String] 'get ' : 
  Methods:
    get_MaxPts(): PrivateScope, Public, HideBySig, SpecialName
    get_NumBars(): PrivateScope, Public, HideBySig, SpecialName
    get_NumClusterableBars(): PrivateScope, Public, HideBySig, SpecialName
    get_NumPies(): PrivateScope, Public, HideBySig, SpecialName
    get_IsPieOnly(): PrivateScope, Public, HideBySig, SpecialName
    HasData(): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, HideBySig
    get_Backward(): PrivateScope, Public, HideBySig, SpecialName
    get_Forward(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    IndexOf(String): PrivateScope, Public, HideBySig
    IndexOfTag(String): PrivateScope, Public, HideBySig
    Sort(SortType, Int32): PrivateScope, Public, HideBySig
    Move(Int32, Int32): PrivateScope, Public, HideBySig
    GetRange(Boolean, Boolean, GraphPane): PrivateScope, Public, HideBySig
    Draw(Graphics, GraphPane, Single): PrivateScope, Public, HideBySig
    GetBarItemPos(GraphPane, BarItem): PrivateScope, Public, HideBySig
Class ZedGraph.Selection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :ZedGraph.CurveList
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    ZedGraph.Border Border : Public, Static
    ZedGraph.Fill Fill : Public, Static
    ZedGraph.Line Line : Public, Static
    ZedGraph.Symbol Symbol : Public, Static
  Events:
    System.EventHandler SelectionChangedEvent: 
  Methods:
    add_SelectionChangedEvent(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_SelectionChangedEvent(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    Select(MasterPane, CurveItem): PrivateScope, Public, HideBySig
    Select(MasterPane, CurveList): PrivateScope, Public, HideBySig
    AddToSelection(MasterPane, CurveItem): PrivateScope, Public, HideBySig
    AddToSelection(MasterPane, CurveList): PrivateScope, Public, HideBySig
    RemoveFromSelection(MasterPane, CurveItem): PrivateScope, Public, HideBySig
    ClearSelection(MasterPane): PrivateScope, Public, HideBySig
    ClearSelection(MasterPane, Boolean): PrivateScope, Public, HideBySig
    UpdateSelection(MasterPane): PrivateScope, Public, HideBySig
Interface ZedGraph.IPointList: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.ICloneable
  Properties:
    ZedGraph.PointPair Item [Int32] 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface ZedGraph.IPointListEdit: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    ZedGraph.IPointList
    System.ICloneable
  Properties:
    ZedGraph.PointPair Item [Int32] 'get set' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Item(Int32, PointPair): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Add(PointPair): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Add(Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RemoveAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class ZedGraph.RadarPointList: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Collections.Generic.List`1[ZedGraph.PointPair]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.RadarPointList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ZedGraph.IPointListEdit
    ZedGraph.IPointList
    System.ICloneable
  Properties:
    ZedGraph.PointPair Item [Int32] 'get set' : 
    Boolean Clockwise 'get set' : 
    Double Rotation 'get set' : 
    Int32 Count 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, PointPair): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Clockwise(): PrivateScope, Public, HideBySig, SpecialName
    set_Clockwise(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Rotation(): PrivateScope, Public, HideBySig, SpecialName
    set_Rotation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    Add(Double, Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class ZedGraph.LineBase: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.LineBase): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
    System.Runtime.Serialization.ISerializable
  Fields:
    Int32 schema0 = 12 : Public, Static, Literal, HasDefault
  Properties:
    System.Drawing.Color Color 'get set' : 
    System.Drawing.Drawing2D.DashStyle Style 'get set' : 
    Single DashOn 'get set' : 
    Single DashOff 'get set' : 
    Single Width 'get set' : 
    Boolean IsVisible 'get set' : 
    Boolean IsAntiAlias 'get set' : 
    ZedGraph.Fill GradientFill 'get set' : 
  Methods:
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    set_Color(Color): PrivateScope, Public, HideBySig, SpecialName
    get_Style(): PrivateScope, Public, HideBySig, SpecialName
    set_Style(DashStyle): PrivateScope, Public, HideBySig, SpecialName
    get_DashOn(): PrivateScope, Public, HideBySig, SpecialName
    set_DashOn(Single): PrivateScope, Public, HideBySig, SpecialName
    get_DashOff(): PrivateScope, Public, HideBySig, SpecialName
    set_DashOff(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Width(Single): PrivateScope, Public, HideBySig, SpecialName
    get_IsVisible(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVisible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsAntiAlias(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAntiAlias(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_GradientFill(): PrivateScope, Public, HideBySig, SpecialName
    set_GradientFill(Fill): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    GetPen(PaneBase, Single): PrivateScope, Public, HideBySig
    GetPen(PaneBase, Single, PointPair): PrivateScope, Public, HideBySig
Struct ZedGraph.LineBase+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Boolean IsVisible : Public, Static
    Single Width : Public, Static
    Boolean IsAntiAlias : Public, Static
    System.Drawing.Drawing2D.DashStyle Style : Public, Static
    Single DashOn : Public, Static
    Single DashOff : Public, Static
    System.Drawing.Color Color : Public, Static
Class ZedGraph.GraphObjList: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Collections.Generic.List`1[ZedGraph.GraphObj]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.GraphObjList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Properties:
    ZedGraph.GraphObj Item [System.String] 'get ' : 
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    IndexOfTag(String): PrivateScope, Public, HideBySig
    Move(Int32, Int32): PrivateScope, Public, HideBySig
    Draw(Graphics, PaneBase, Single, ZOrder): PrivateScope, Public, HideBySig
    FindPoint(PointF, PaneBase, Graphics, Single, Int32&(Out)): PrivateScope, Public, HideBySig
Class ZedGraph.Label: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(System.String, System.String, Single, System.Drawing.Color, Boolean, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, ZedGraph.FontSpec): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.Label): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
    System.Runtime.Serialization.ISerializable
  Fields:
    Int32 schema = 10 : Public, Static, Literal, HasDefault
  Properties:
    System.String Text 'get set' : 
    ZedGraph.FontSpec FontSpec 'get set' : 
    Boolean IsVisible 'get set' : 
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_FontSpec(): PrivateScope, Public, HideBySig, SpecialName
    set_FontSpec(FontSpec): PrivateScope, Public, HideBySig, SpecialName
    get_IsVisible(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVisible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
Class ZedGraph.GapLabel: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.Label
    Void .ctor(System.String, System.String, Single, System.Drawing.Color, Boolean, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.GapLabel): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema2 = 10 : Public, Static, Literal, HasDefault
  Properties:
    Single Gap 'get set' : 
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    get_Gap(): PrivateScope, Public, HideBySig, SpecialName
    set_Gap(Single): PrivateScope, Public, HideBySig, SpecialName
    GetScaledGap(Single): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
Struct ZedGraph.GapLabel+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single Gap : Public, Static
Class ZedGraph.Chart: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.Chart): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
    System.Runtime.Serialization.ISerializable
  Fields:
    Int32 schema = 10 : Public, Static, Literal, HasDefault
  Properties:
    System.Drawing.RectangleF Rect 'get set' : 
    ZedGraph.Fill Fill 'get set' : 
    ZedGraph.Border Border 'get set' : 
    Boolean IsRectAuto 'get set' : 
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    get_Rect(): PrivateScope, Public, HideBySig, SpecialName
    set_Rect(RectangleF): PrivateScope, Public, HideBySig, SpecialName
    get_Fill(): PrivateScope, Public, HideBySig, SpecialName
    set_Fill(Fill): PrivateScope, Public, HideBySig, SpecialName
    get_Border(): PrivateScope, Public, HideBySig, SpecialName
    set_Border(Border): PrivateScope, Public, HideBySig, SpecialName
    get_IsRectAuto(): PrivateScope, Public, HideBySig, SpecialName
    set_IsRectAuto(Boolean): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
Struct ZedGraph.Chart+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.Drawing.Color BorderColor : Public, Static
    System.Drawing.Color FillColor : Public, Static
    System.Drawing.Brush FillBrush : Public, Static
    ZedGraph.FillType FillType : Public, Static
    Single BorderPenWidth : Public, Static
    Boolean IsBorderVisible : Public, Static
Class ZedGraph.CurveItem: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
    Void .ctor(System.String, Double[], Double[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, ZedGraph.IPointList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.CurveItem): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
    System.ICloneable
  Fields:
    System.Object Tag : Public
    Int32 schema = 11 : Public, Static, Literal, HasDefault
  Properties:
    ZedGraph.Label Label 'get set' : 
    System.Drawing.Color Color 'get set' : 
    Boolean IsVisible 'get set' : 
    Boolean IsSelected 'get set' : 
    Boolean IsSelectable 'get set' : 
    Boolean IsOverrideOrdinal 'get set' : 
    Boolean IsX2Axis 'get set' : 
    Boolean IsY2Axis 'get set' : 
    Int32 YAxisIndex 'get set' : 
    Boolean IsBar 'get ' : 
    Boolean IsPie 'get ' : 
    Boolean IsLine 'get ' : 
    Int32 NPts 'get ' : 
    ZedGraph.IPointList Points 'get set' : 
    ZedGraph.PointPair Item [Int32] 'get ' : 
    ZedGraph.Link Link 'get set' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    get_Label(): PrivateScope, Public, HideBySig, SpecialName
    set_Label(Label): PrivateScope, Public, HideBySig, SpecialName
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    set_Color(Color): PrivateScope, Public, HideBySig, SpecialName
    get_IsVisible(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVisible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsSelected(): PrivateScope, Public, HideBySig, SpecialName
    set_IsSelected(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsSelectable(): PrivateScope, Public, HideBySig, SpecialName
    set_IsSelectable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsOverrideOrdinal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsOverrideOrdinal(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsX2Axis(): PrivateScope, Public, HideBySig, SpecialName
    set_IsX2Axis(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsY2Axis(): PrivateScope, Public, HideBySig, SpecialName
    set_IsY2Axis(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_YAxisIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_YAxisIndex(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IsBar(): PrivateScope, Public, HideBySig, SpecialName
    get_IsPie(): PrivateScope, Public, HideBySig, SpecialName
    get_IsLine(): PrivateScope, Public, HideBySig, SpecialName
    get_NPts(): PrivateScope, Public, HideBySig, SpecialName
    get_Points(): PrivateScope, Public, HideBySig, SpecialName
    set_Points(IPointList): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Link(): PrivateScope, Public, HideBySig, SpecialName
    set_Link(Link): PrivateScope, Public, HideBySig, SpecialName
    Draw(Graphics, GraphPane, Int32, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DrawLegendKey(Graphics, GraphPane, RectangleF, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddPoint(Double, Double): PrivateScope, Public, HideBySig
    AddPoint(PointPair): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    RemovePoint(Int32): PrivateScope, Public, HideBySig
    GetXAxis(GraphPane): PrivateScope, Public, HideBySig
    GetYAxis(GraphPane): PrivateScope, Public, HideBySig
    GetYAxisIndex(GraphPane): PrivateScope, Public, HideBySig
    MakeUnique(): PrivateScope, Public, HideBySig
    MakeUnique(ColorSymbolRotator): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRange(Double&(Out), Double&(Out), Double&(Out), Double&(Out), Boolean, Boolean, GraphPane): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BaseAxis(GraphPane): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ValueAxis(GraphPane): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBarWidth(GraphPane): PrivateScope, Public, HideBySig
    GetCoords(GraphPane, Int32, String&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class ZedGraph.CurveItem+Comparer: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(ZedGraph.SortType, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IComparer`1[ZedGraph.CurveItem]
  Methods:
    Compare(CurveItem, CurveItem): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class ZedGraph.OHLCBarItem: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.CurveItem
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, ZedGraph.IPointList, System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.OHLCBarItem): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema2 = 10 : Public, Static, Literal, HasDefault
  Properties:
    ZedGraph.OHLCBar Bar 'get ' : 
  Methods:
    get_Bar(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    Draw(Graphics, GraphPane, Int32, Single): PrivateScope, Public, Virtual, HideBySig
    DrawLegendKey(Graphics, GraphPane, RectangleF, Single): PrivateScope, Public, Virtual, HideBySig
    GetCoords(GraphPane, Int32, String&(Out)): PrivateScope, Public, Virtual, HideBySig
Class ZedGraph.ScaleState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(ZedGraph.Axis): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.ScaleState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    ApplyScale(Axis): PrivateScope, Public, HideBySig
    IsChanged(Axis): PrivateScope, Public, HideBySig
Class ZedGraph.Scale: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
    Void .ctor(ZedGraph.Axis): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.Scale, ZedGraph.Axis): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
  Fields:
    Int32 schema = 11 : Public, Static, Literal, HasDefault
  Properties:
    ZedGraph.AxisType Type 'get ' : 
    Boolean IsLog 'get ' : 
    Boolean IsExponent 'get ' : 
    Boolean IsDate 'get ' : 
    Boolean IsText 'get ' : 
    Boolean IsOrdinal 'get ' : 
    Boolean IsAnyOrdinal 'get ' : 
    Double Min 'get set' : 
    Double Max 'get set' : 
    Double MajorStep 'get set' : 
    Double MinorStep 'get set' : 
    Double Exponent 'get set' : 
    Double BaseTic 'get set' : 
    ZedGraph.DateUnit MajorUnit 'get set' : 
    ZedGraph.DateUnit MinorUnit 'get set' : 
    Boolean MinAuto 'get set' : 
    Boolean MaxAuto 'get set' : 
    Boolean MajorStepAuto 'get set' : 
    Boolean MinorStepAuto 'get set' : 
    Boolean FormatAuto 'get set' : 
    System.String Format 'get set' : 
    Int32 Mag  'get set' : 
    Boolean MagAuto 'get set' : 
    Double MinGrace 'get set' : 
    Double MaxGrace 'get set' : 
    ZedGraph.AlignP Align 'get set' : 
    ZedGraph.AlignH AlignH 'get set' : 
    ZedGraph.FontSpec FontSpec 'get set' : 
    Single LabelGap 'get set' : 
    Boolean IsLabelsInside 'get set' : 
    Boolean IsSkipFirstLabel 'get set' : 
    Boolean IsSkipLastLabel 'get set' : 
    Boolean IsSkipCrossLabel 'get set' : 
    Boolean IsReverse 'get set' : 
    Boolean IsUseTenPower 'get set' : 
    Boolean IsPreventLabelOverlap 'get set' : 
    Boolean IsVisible 'get set' : 
    System.String[] TextLabels 'get set' : 
  Methods:
    GetClusterWidth(GraphPane): PrivateScope, Public, HideBySig
    GetClusterWidth(Double): PrivateScope, Public, HideBySig
    PickScale(GraphPane, Graphics, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CalcMaxLabels(Graphics, GraphPane, Single): PrivateScope, Public, HideBySig
    Transform(Double): PrivateScope, Public, HideBySig
    Transform(Boolean, Int32, Double): PrivateScope, Public, HideBySig
    ReverseTransform(Single): PrivateScope, Public, HideBySig
    LocalTransform(Double): PrivateScope, Public, HideBySig
    SafeLog(Double): PrivateScope, Public, Static, HideBySig
    SafeExp(Double, Double): PrivateScope, Public, Static, HideBySig
    Clone(Axis): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MakeNewScale(Scale, AxisType): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsLog(): PrivateScope, Public, HideBySig, SpecialName
    get_IsExponent(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDate(): PrivateScope, Public, HideBySig, SpecialName
    get_IsText(): PrivateScope, Public, HideBySig, SpecialName
    get_IsOrdinal(): PrivateScope, Public, HideBySig, SpecialName
    get_IsAnyOrdinal(): PrivateScope, Public, HideBySig, SpecialName
    get_Min(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Min(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Max(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Max(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MajorStep(): PrivateScope, Public, HideBySig, SpecialName
    set_MajorStep(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MinorStep(): PrivateScope, Public, HideBySig, SpecialName
    set_MinorStep(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Exponent(): PrivateScope, Public, HideBySig, SpecialName
    set_Exponent(Double): PrivateScope, Public, HideBySig, SpecialName
    get_BaseTic(): PrivateScope, Public, HideBySig, SpecialName
    set_BaseTic(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MajorUnit(): PrivateScope, Public, HideBySig, SpecialName
    set_MajorUnit(DateUnit): PrivateScope, Public, HideBySig, SpecialName
    get_MinorUnit(): PrivateScope, Public, HideBySig, SpecialName
    set_MinorUnit(DateUnit): PrivateScope, Public, HideBySig, SpecialName
    get_MinAuto(): PrivateScope, Public, HideBySig, SpecialName
    set_MinAuto(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MaxAuto(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxAuto(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MajorStepAuto(): PrivateScope, Public, HideBySig, SpecialName
    set_MajorStepAuto(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MinorStepAuto(): PrivateScope, Public, HideBySig, SpecialName
    set_MinorStepAuto(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_FormatAuto(): PrivateScope, Public, HideBySig, SpecialName
    set_FormatAuto(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
    get_Mag(): PrivateScope, Public, HideBySig, SpecialName
    set_Mag(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MagAuto(): PrivateScope, Public, HideBySig, SpecialName
    set_MagAuto(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MinGrace(): PrivateScope, Public, HideBySig, SpecialName
    set_MinGrace(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MaxGrace(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxGrace(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Align(): PrivateScope, Public, HideBySig, SpecialName
    set_Align(AlignP): PrivateScope, Public, HideBySig, SpecialName
    get_AlignH(): PrivateScope, Public, HideBySig, SpecialName
    set_AlignH(AlignH): PrivateScope, Public, HideBySig, SpecialName
    get_FontSpec(): PrivateScope, Public, HideBySig, SpecialName
    set_FontSpec(FontSpec): PrivateScope, Public, HideBySig, SpecialName
    get_LabelGap(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelGap(Single): PrivateScope, Public, HideBySig, SpecialName
    get_IsLabelsInside(): PrivateScope, Public, HideBySig, SpecialName
    set_IsLabelsInside(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsSkipFirstLabel(): PrivateScope, Public, HideBySig, SpecialName
    set_IsSkipFirstLabel(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsSkipLastLabel(): PrivateScope, Public, HideBySig, SpecialName
    set_IsSkipLastLabel(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsSkipCrossLabel(): PrivateScope, Public, HideBySig, SpecialName
    set_IsSkipCrossLabel(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsReverse(): PrivateScope, Public, HideBySig, SpecialName
    set_IsReverse(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsUseTenPower(): PrivateScope, Public, HideBySig, SpecialName
    set_IsUseTenPower(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsPreventLabelOverlap(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPreventLabelOverlap(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsVisible(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVisible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_TextLabels(): PrivateScope, Public, HideBySig, SpecialName
    set_TextLabels(String[]): PrivateScope, Public, HideBySig, SpecialName
    SetupScaleData(GraphPane, Axis): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Linearize(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeLinearize(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct ZedGraph.Scale+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Double ZeroLever : Public, Static
    Double MinGrace : Public, Static
    Double MaxGrace : Public, Static
    Double MaxTextLabels : Public, Static
    Double TargetXSteps : Public, Static
    Double TargetYSteps : Public, Static
    Double TargetMinorXSteps : Public, Static
    Double TargetMinorYSteps : Public, Static
    Boolean IsReverse : Public, Static
    System.String Format : Public, Static
    Double RangeYearYear : Public, Static
    Double RangeYearMonth : Public, Static
    Double RangeMonthMonth : Public, Static
    Double RangeDayDay : Public, Static
    Double RangeDayHour : Public, Static
    Double RangeHourHour : Public, Static
    Double RangeHourMinute : Public, Static
    Double RangeMinuteMinute : Public, Static
    Double RangeMinuteSecond : Public, Static
    Double RangeSecondSecond : Public, Static
    System.String FormatYearYear : Public, Static
    System.String FormatYearMonth : Public, Static
    System.String FormatMonthMonth : Public, Static
    System.String FormatDayDay : Public, Static
    System.String FormatDayHour : Public, Static
    System.String FormatHourHour : Public, Static
    System.String FormatHourMinute : Public, Static
    System.String FormatMinuteMinute : Public, Static
    System.String FormatMinuteSecond : Public, Static
    System.String FormatSecondSecond : Public, Static
    System.String FormatMillisecond : Public, Static
    ZedGraph.AlignP Align : Public, Static
    ZedGraph.AlignH AlignH : Public, Static
    System.String FontFamily : Public, Static
    Single FontSize : Public, Static
    System.Drawing.Color FontColor : Public, Static
    Boolean FontBold : Public, Static
    Boolean FontItalic : Public, Static
    Boolean FontUnderline : Public, Static
    System.Drawing.Color FillColor : Public, Static
    System.Drawing.Brush FillBrush : Public, Static
    ZedGraph.FillType FillType : Public, Static
    Boolean IsVisible : Public, Static
    Boolean IsLabelsInside : Public, Static
    Single EdgeTolerance : Public, Static
    Single LabelGap : Public, Static
Class ZedGraph.MinorGrid: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.MinorGrid): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
    System.Runtime.Serialization.ISerializable
  Fields:
    Int32 schema = 10 : Public, Static, Literal, HasDefault
  Properties:
    Boolean IsVisible 'get set' : 
    Single DashOn 'get set' : 
    Single DashOff 'get set' : 
    Single PenWidth 'get set' : 
    System.Drawing.Color Color 'get set' : 
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    get_IsVisible(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVisible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DashOn(): PrivateScope, Public, HideBySig, SpecialName
    set_DashOn(Single): PrivateScope, Public, HideBySig, SpecialName
    get_DashOff(): PrivateScope, Public, HideBySig, SpecialName
    set_DashOff(Single): PrivateScope, Public, HideBySig, SpecialName
    get_PenWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_PenWidth(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    set_Color(Color): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
Struct ZedGraph.MinorGrid+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single DashOn : Public, Static
    Single DashOff : Public, Static
    Single PenWidth : Public, Static
    System.Drawing.Color Color : Public, Static
    Boolean IsVisible : Public, Static
Class ZedGraph.Location: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, ZedGraph.CoordType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, ZedGraph.CoordType, ZedGraph.AlignH, ZedGraph.AlignV): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double, ZedGraph.CoordType, ZedGraph.AlignH, ZedGraph.AlignV): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.Location): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
    System.Runtime.Serialization.ISerializable
  Fields:
    Int32 schema = 10 : Public, Static, Literal, HasDefault
  Properties:
    ZedGraph.AlignH AlignH 'get set' : 
    ZedGraph.AlignV AlignV 'get set' : 
    ZedGraph.CoordType CoordinateFrame 'get set' : 
    Double X   'get set' : 
    Double Y   'get set' : 
    Double X1  'get set' : 
    Double Y1  'get set' : 
    Double Width 'get set' : 
    Double Height 'get set' : 
    Double X2  'get ' : 
    Double Y2  'get ' : 
    System.Drawing.RectangleF Rect 'get set' : 
    System.Drawing.PointF TopLeft 'get set' : 
    System.Drawing.PointF BottomRight 'get ' : 
  Methods:
    get_AlignH(): PrivateScope, Public, HideBySig, SpecialName
    set_AlignH(AlignH): PrivateScope, Public, HideBySig, SpecialName
    get_AlignV(): PrivateScope, Public, HideBySig, SpecialName
    set_AlignV(AlignV): PrivateScope, Public, HideBySig, SpecialName
    get_CoordinateFrame(): PrivateScope, Public, HideBySig, SpecialName
    set_CoordinateFrame(CoordType): PrivateScope, Public, HideBySig, SpecialName
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    set_X(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(Double): PrivateScope, Public, HideBySig, SpecialName
    get_X1(): PrivateScope, Public, HideBySig, SpecialName
    set_X1(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Y1(): PrivateScope, Public, HideBySig, SpecialName
    set_Y1(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Width(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Double): PrivateScope, Public, HideBySig, SpecialName
    get_X2(): PrivateScope, Public, HideBySig, SpecialName
    get_Y2(): PrivateScope, Public, HideBySig, SpecialName
    get_Rect(): PrivateScope, Public, HideBySig, SpecialName
    set_Rect(RectangleF): PrivateScope, Public, HideBySig, SpecialName
    get_TopLeft(): PrivateScope, Public, HideBySig, SpecialName
    set_TopLeft(PointF): PrivateScope, Public, HideBySig, SpecialName
    get_BottomRight(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    Transform(PaneBase): PrivateScope, Public, HideBySig
    Transform(PaneBase, Double, Double, CoordType): PrivateScope, Public, Static, HideBySig
    TransformTopLeft(PaneBase, Single, Single): PrivateScope, Public, HideBySig
    TransformTopLeft(PaneBase): PrivateScope, Public, HideBySig
    TransformBottomRight(PaneBase): PrivateScope, Public, HideBySig
    TransformRect(PaneBase): PrivateScope, Public, HideBySig
Class ZedGraph.OHLCBar: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.LineBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.OHLCBar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema = 10 : Public, Static, Literal, HasDefault
  Properties:
    Boolean IsOpenCloseVisible 'get set' : 
    Single Size 'get set' : 
    Boolean IsAutoSize 'get set' : 
  Methods:
    get_IsOpenCloseVisible(): PrivateScope, Public, HideBySig, SpecialName
    set_IsOpenCloseVisible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Single): PrivateScope, Public, HideBySig, SpecialName
    get_IsAutoSize(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAutoSize(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    Draw(Graphics, GraphPane, Boolean, Single, Single, Single, Single, Single, Single, Pen): PrivateScope, Public, HideBySig
    Draw(Graphics, GraphPane, OHLCBarItem, Axis, Axis, Single): PrivateScope, Public, HideBySig
    GetBarWidth(GraphPane, Axis, Single): PrivateScope, Public, HideBySig
Struct ZedGraph.OHLCBar+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single Size : Public, Static
    Boolean IsOpenCloseVisible : Public, Static
    Boolean IsAutoSize : Public, Static
Class ZedGraph.JapaneseCandleStick: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.OHLCBar
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.JapaneseCandleStick): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema2 = 11 : Public, Static, Literal, HasDefault
  Properties:
    ZedGraph.Fill RisingFill 'get set' : 
    ZedGraph.Fill FallingFill 'get set' : 
    ZedGraph.Border RisingBorder 'get set' : 
    ZedGraph.Border FallingBorder 'get set' : 
    System.Drawing.Color FallingColor 'get set' : 
  Methods:
    get_RisingFill(): PrivateScope, Public, HideBySig, SpecialName
    set_RisingFill(Fill): PrivateScope, Public, HideBySig, SpecialName
    get_FallingFill(): PrivateScope, Public, HideBySig, SpecialName
    set_FallingFill(Fill): PrivateScope, Public, HideBySig, SpecialName
    get_RisingBorder(): PrivateScope, Public, HideBySig, SpecialName
    set_RisingBorder(Border): PrivateScope, Public, HideBySig, SpecialName
    get_FallingBorder(): PrivateScope, Public, HideBySig, SpecialName
    set_FallingBorder(Border): PrivateScope, Public, HideBySig, SpecialName
    get_FallingColor(): PrivateScope, Public, HideBySig, SpecialName
    set_FallingColor(Color): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    Draw(Graphics, GraphPane, Boolean, Single, Single, Single, Single, Single, Single, Single, Pen, Fill, Border, PointPair): PrivateScope, Public, HideBySig
    Draw(Graphics, GraphPane, JapaneseCandleStickItem, Axis, Axis, Single): PrivateScope, Public, HideBySig
Struct ZedGraph.JapaneseCandleStick+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.Drawing.Color RisingColor : Public, Static
    System.Drawing.Color FallingColor : Public, Static
    System.Drawing.Color RisingBorder : Public, Static
    System.Drawing.Color FallingBorder : Public, Static
Class ZedGraph.Y2AxisList: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Collections.Generic.List`1[ZedGraph.Y2Axis]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.Y2AxisList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Properties:
    ZedGraph.Y2Axis Item [Int32] 'get ' : 
    ZedGraph.Y2Axis Item [System.String] 'get ' : 
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    IndexOf(String): PrivateScope, Public, HideBySig
    IndexOfTag(String): PrivateScope, Public, HideBySig
    Add(String): PrivateScope, Public, HideBySig
Class ZedGraph.ScaleStateList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Collections.Generic.List`1[ZedGraph.ScaleState]
    Void .ctor(ZedGraph.YAxisList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.Y2AxisList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.ScaleStateList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    IsChanged(YAxisList): PrivateScope, Public, HideBySig
    IsChanged(Y2AxisList): PrivateScope, Public, HideBySig
    ApplyScale(YAxisList): PrivateScope, Public, HideBySig
    ApplyScale(Y2AxisList): PrivateScope, Public, HideBySig
Class ZedGraph.PaneBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Drawing.RectangleF): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.PaneBase): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Fields:
    Int32 schema = 10 : Public, Static, Literal, HasDefault
  Properties:
    System.Drawing.RectangleF Rect 'get set' : 
    ZedGraph.Legend Legend 'get ' : 
    ZedGraph.Label Title 'get ' : 
    System.Object Tag 'get set' : 
    ZedGraph.Border Border 'get set' : 
    ZedGraph.Fill Fill 'get set' : 
    ZedGraph.GraphObjList GraphObjList 'get set' : 
    ZedGraph.Margin Margin 'get set' : 
    Single BaseDimension 'get set' : 
    Single TitleGap 'get set' : 
    Boolean IsFontsScaled 'get set' : 
    Boolean IsPenWidthScaled 'get set' : 
  Methods:
    get_Rect(): PrivateScope, Public, HideBySig, SpecialName
    set_Rect(RectangleF): PrivateScope, Public, HideBySig, SpecialName
    get_Legend(): PrivateScope, Public, HideBySig, SpecialName
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    get_Tag(): PrivateScope, Public, HideBySig, SpecialName
    set_Tag(Object): PrivateScope, Public, HideBySig, SpecialName
    get_Border(): PrivateScope, Public, HideBySig, SpecialName
    set_Border(Border): PrivateScope, Public, HideBySig, SpecialName
    get_Fill(): PrivateScope, Public, HideBySig, SpecialName
    set_Fill(Fill): PrivateScope, Public, HideBySig, SpecialName
    get_GraphObjList(): PrivateScope, Public, HideBySig, SpecialName
    set_GraphObjList(GraphObjList): PrivateScope, Public, HideBySig, SpecialName
    get_Margin(): PrivateScope, Public, HideBySig, SpecialName
    set_Margin(Margin): PrivateScope, Public, HideBySig, SpecialName
    get_BaseDimension(): PrivateScope, Public, HideBySig, SpecialName
    set_BaseDimension(Single): PrivateScope, Public, HideBySig, SpecialName
    get_TitleGap(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleGap(Single): PrivateScope, Public, HideBySig, SpecialName
    get_IsFontsScaled(): PrivateScope, Public, HideBySig, SpecialName
    set_IsFontsScaled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsPenWidthScaled(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPenWidthScaled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    ShallowClone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    Draw(Graphics): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CalcClientRect(Graphics, Single): PrivateScope, Public, HideBySig
    DrawPaneFrame(Graphics, Single): PrivateScope, Public, HideBySig
    DrawTitle(Graphics, Single): PrivateScope, Public, HideBySig
    ReSize(Graphics, RectangleF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CalcScaleFactor(): PrivateScope, Public, HideBySig
    ScaledPenWidth(Single, Single): PrivateScope, Public, HideBySig
    GetImage(): PrivateScope, Public, HideBySig
    GetImage(Boolean): PrivateScope, Public, HideBySig
    GetImage(Int32, Int32, Single, Boolean): PrivateScope, Public, HideBySig
    GetImage(Int32, Int32, Single): PrivateScope, Public, HideBySig
    GetMetafile(Int32, Int32, Boolean): PrivateScope, Public, HideBySig
    GetMetafile(Int32, Int32): PrivateScope, Public, HideBySig
    GetMetafile(): PrivateScope, Public, HideBySig
Struct ZedGraph.PaneBase+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Boolean IsShowTitle : Public, Static
    System.String FontFamily : Public, Static
    Single FontSize : Public, Static
    System.Drawing.Color FontColor : Public, Static
    Boolean FontBold : Public, Static
    Boolean FontItalic : Public, Static
    Boolean FontUnderline : Public, Static
    Boolean IsBorderVisible : Public, Static
    System.Drawing.Color BorderColor : Public, Static
    System.Drawing.Color FillColor : Public, Static
    Single BorderPenWidth : Public, Static
    Single BaseDimension : Public, Static
    Boolean IsPenWidthScaled : Public, Static
    Boolean IsFontsScaled : Public, Static
    Single TitleGap : Public, Static
Class ZedGraph.MasterPane: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.PaneBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Drawing.RectangleF): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.MasterPane): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
    System.Runtime.Serialization.IDeserializationCallback
  Fields:
    Int32 schema2 = 11 : Public, Static, Literal, HasDefault
  Properties:
    ZedGraph.PaneList PaneList 'get set' : 
    Single InnerPaneGap 'get set' : 
    Boolean IsUniformLegendEntries 'get set' : 
    Boolean IsCommonScaleFactor 'get set' : 
    Boolean IsAntiAlias 'get set' : 
    ZedGraph.GraphPane Item [Int32] 'get set' : 
    ZedGraph.GraphPane Item [System.String] 'get ' : 
  Methods:
    get_PaneList(): PrivateScope, Public, HideBySig, SpecialName
    set_PaneList(PaneList): PrivateScope, Public, HideBySig, SpecialName
    get_InnerPaneGap(): PrivateScope, Public, HideBySig, SpecialName
    set_InnerPaneGap(Single): PrivateScope, Public, HideBySig, SpecialName
    get_IsUniformLegendEntries(): PrivateScope, Public, HideBySig, SpecialName
    set_IsUniformLegendEntries(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsCommonScaleFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCommonScaleFactor(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsAntiAlias(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAntiAlias(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    OnDeserialization(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, GraphPane): PrivateScope, Public, HideBySig, SpecialName
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    Add(GraphPane): PrivateScope, Public, HideBySig
    AxisChange(): PrivateScope, Public, HideBySig
    AxisChange(Graphics): PrivateScope, Public, HideBySig
    ReSize(Graphics): PrivateScope, Public, HideBySig
    ReSize(Graphics, RectangleF): PrivateScope, Public, Virtual, HideBySig
    CommonScaleFactor(): PrivateScope, Public, HideBySig
    Draw(Graphics): PrivateScope, Public, Virtual, HideBySig
    FindNearestPaneObject(PointF, Graphics, GraphPane&(Out), Object&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    FindPane(PointF): PrivateScope, Public, HideBySig
    FindChartRect(PointF): PrivateScope, Public, HideBySig
    SetLayout(Graphics, PaneLayout): PrivateScope, Public, HideBySig
    SetLayout(Graphics, Int32, Int32): PrivateScope, Public, HideBySig
    SetLayout(Graphics, Boolean, Int32[]): PrivateScope, Public, HideBySig
    SetLayout(Graphics, Boolean, Int32[], Single[]): PrivateScope, Public, HideBySig
    DoLayout(Graphics): PrivateScope, Public, HideBySig
Struct ZedGraph.MasterPane+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    ZedGraph.PaneLayout PaneLayout : Public, Static
    Single InnerPaneGap : Public, Static
    Boolean IsShowLegend : Public, Static
    Boolean IsUniformLegendEntries : Public, Static
    Boolean IsCommonScaleFactor : Public, Static
Class ZedGraph.GasGaugeRegion: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.CurveItem
    Void .ctor(System.String, Double, Double, System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.GasGaugeRegion): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema2 = 10 : Public, Static, Literal, HasDefault
  Properties:
    System.Drawing.Drawing2D.GraphicsPath SlicePath 'get ' : 
    ZedGraph.TextObj LabelDetail 'get set' : 
    ZedGraph.Border Border 'get set' : 
    System.Drawing.Color RegionColor 'get set' : 
    ZedGraph.Fill Fill 'get set' : 
    Double MinValue 'get set' : 
    Double MaxValue 'get set' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    Clone(): PrivateScope, Public, HideBySig
    get_SlicePath(): PrivateScope, Public, HideBySig, SpecialName
    get_LabelDetail(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelDetail(TextObj): PrivateScope, Public, HideBySig, SpecialName
    get_Border(): PrivateScope, Public, HideBySig, SpecialName
    set_Border(Border): PrivateScope, Public, HideBySig, SpecialName
    get_RegionColor(): PrivateScope, Public, HideBySig, SpecialName
    set_RegionColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_Fill(): PrivateScope, Public, HideBySig, SpecialName
    set_Fill(Fill): PrivateScope, Public, HideBySig, SpecialName
    get_MinValue(): PrivateScope, Public, HideBySig, SpecialName
    set_MinValue(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MaxValue(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxValue(Double): PrivateScope, Public, HideBySig, SpecialName
    Draw(Graphics, GraphPane, Int32, Single): PrivateScope, Public, Virtual, HideBySig
    DrawLegendKey(Graphics, GraphPane, RectangleF, Single): PrivateScope, Public, Virtual, HideBySig
    GetCoords(GraphPane, Int32, String&(Out)): PrivateScope, Public, Virtual, HideBySig
    CalculateGasGuageParameters(GraphPane): PrivateScope, Public, Static, HideBySig
    CalcRectangle(Graphics, GraphPane, Single, RectangleF): PrivateScope, Public, Static, HideBySig
Struct ZedGraph.GasGaugeRegion+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single BorderWidth : Public, Static
    ZedGraph.FillType FillType : Public, Static
    Boolean IsBorderVisible : Public, Static
    System.Drawing.Color BorderColor : Public, Static
    System.Drawing.Color FillColor : Public, Static
    System.Drawing.Brush FillBrush : Public, Static
    Boolean isVisible : Public, Static
    Single FontSize : Public, Static
Class ZedGraph.ColorSymbolRotator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Drawing.Color[] COLORS : Public, Static, InitOnly
    ZedGraph.SymbolType[] SYMBOLS : Public, Static, InitOnly
  Properties:
    System.Drawing.Color NextColor 'get ' : 
    Int32 NextColorIndex 'get set' : 
    ZedGraph.SymbolType NextSymbol 'get ' : 
    Int32 NextSymbolIndex 'get set' : 
    ZedGraph.ColorSymbolRotator StaticInstance 'get ' : 
    System.Drawing.Color StaticNextColor 'get ' : 
    ZedGraph.SymbolType StaticNextSymbol 'get ' : 
  Methods:
    get_NextColor(): PrivateScope, Public, HideBySig, SpecialName
    get_NextColorIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_NextColorIndex(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_NextSymbol(): PrivateScope, Public, HideBySig, SpecialName
    get_NextSymbolIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_NextSymbolIndex(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_StaticInstance(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_StaticNextColor(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_StaticNextSymbol(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct ZedGraph.AxisType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ZedGraph.AxisType Linear = 0 : Public, Static, Literal, HasDefault
    ZedGraph.AxisType Log = 1 : Public, Static, Literal, HasDefault
    ZedGraph.AxisType Date = 2 : Public, Static, Literal, HasDefault
    ZedGraph.AxisType Text = 3 : Public, Static, Literal, HasDefault
    ZedGraph.AxisType Ordinal = 4 : Public, Static, Literal, HasDefault
    ZedGraph.AxisType DateAsOrdinal = 5 : Public, Static, Literal, HasDefault
    ZedGraph.AxisType LinearAsOrdinal = 6 : Public, Static, Literal, HasDefault
    ZedGraph.AxisType Exponent = 7 : Public, Static, Literal, HasDefault
Struct ZedGraph.FillType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ZedGraph.FillType None = 0 : Public, Static, Literal, HasDefault
    ZedGraph.FillType Solid = 1 : Public, Static, Literal, HasDefault
    ZedGraph.FillType Brush = 2 : Public, Static, Literal, HasDefault
    ZedGraph.FillType GradientByX = 3 : Public, Static, Literal, HasDefault
    ZedGraph.FillType GradientByY = 4 : Public, Static, Literal, HasDefault
    ZedGraph.FillType GradientByZ = 5 : Public, Static, Literal, HasDefault
    ZedGraph.FillType GradientByColorValue = 6 : Public, Static, Literal, HasDefault
Struct ZedGraph.DateUnit: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ZedGraph.DateUnit Year = 0 : Public, Static, Literal, HasDefault
    ZedGraph.DateUnit Month = 1 : Public, Static, Literal, HasDefault
    ZedGraph.DateUnit Day = 2 : Public, Static, Literal, HasDefault
    ZedGraph.DateUnit Hour = 3 : Public, Static, Literal, HasDefault
    ZedGraph.DateUnit Minute = 4 : Public, Static, Literal, HasDefault
    ZedGraph.DateUnit Second = 5 : Public, Static, Literal, HasDefault
    ZedGraph.DateUnit Millisecond = 6 : Public, Static, Literal, HasDefault
Struct ZedGraph.SymbolType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ZedGraph.SymbolType Square = 0 : Public, Static, Literal, HasDefault
    ZedGraph.SymbolType Diamond = 1 : Public, Static, Literal, HasDefault
    ZedGraph.SymbolType Triangle = 2 : Public, Static, Literal, HasDefault
    ZedGraph.SymbolType Circle = 3 : Public, Static, Literal, HasDefault
    ZedGraph.SymbolType XCross = 4 : Public, Static, Literal, HasDefault
    ZedGraph.SymbolType Plus = 5 : Public, Static, Literal, HasDefault
    ZedGraph.SymbolType Star = 6 : Public, Static, Literal, HasDefault
    ZedGraph.SymbolType TriangleDown = 7 : Public, Static, Literal, HasDefault
    ZedGraph.SymbolType HDash = 8 : Public, Static, Literal, HasDefault
    ZedGraph.SymbolType VDash = 9 : Public, Static, Literal, HasDefault
    ZedGraph.SymbolType UserDefined = 10 : Public, Static, Literal, HasDefault
    ZedGraph.SymbolType Default = 11 : Public, Static, Literal, HasDefault
    ZedGraph.SymbolType None = 12 : Public, Static, Literal, HasDefault
Struct ZedGraph.LegendPos: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ZedGraph.LegendPos Top = 0 : Public, Static, Literal, HasDefault
    ZedGraph.LegendPos Left = 1 : Public, Static, Literal, HasDefault
    ZedGraph.LegendPos Right = 2 : Public, Static, Literal, HasDefault
    ZedGraph.LegendPos Bottom = 3 : Public, Static, Literal, HasDefault
    ZedGraph.LegendPos InsideTopLeft = 4 : Public, Static, Literal, HasDefault
    ZedGraph.LegendPos InsideTopRight = 5 : Public, Static, Literal, HasDefault
    ZedGraph.LegendPos InsideBotLeft = 6 : Public, Static, Literal, HasDefault
    ZedGraph.LegendPos InsideBotRight = 7 : Public, Static, Literal, HasDefault
    ZedGraph.LegendPos Float = 8 : Public, Static, Literal, HasDefault
    ZedGraph.LegendPos TopCenter = 9 : Public, Static, Literal, HasDefault
    ZedGraph.LegendPos BottomCenter = 10 : Public, Static, Literal, HasDefault
    ZedGraph.LegendPos TopFlushLeft = 11 : Public, Static, Literal, HasDefault
    ZedGraph.LegendPos BottomFlushLeft = 12 : Public, Static, Literal, HasDefault
Struct ZedGraph.AlignH: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ZedGraph.AlignH Left = 0 : Public, Static, Literal, HasDefault
    ZedGraph.AlignH Center = 1 : Public, Static, Literal, HasDefault
    ZedGraph.AlignH Right = 2 : Public, Static, Literal, HasDefault
Struct ZedGraph.AlignP: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ZedGraph.AlignP Inside = 0 : Public, Static, Literal, HasDefault
    ZedGraph.AlignP Center = 1 : Public, Static, Literal, HasDefault
    ZedGraph.AlignP Outside = 2 : Public, Static, Literal, HasDefault
Struct ZedGraph.AlignV: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ZedGraph.AlignV Top = 0 : Public, Static, Literal, HasDefault
    ZedGraph.AlignV Center = 1 : Public, Static, Literal, HasDefault
    ZedGraph.AlignV Bottom = 2 : Public, Static, Literal, HasDefault
Struct ZedGraph.CoordType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ZedGraph.CoordType ChartFraction = 0 : Public, Static, Literal, HasDefault
    ZedGraph.CoordType PaneFraction = 1 : Public, Static, Literal, HasDefault
    ZedGraph.CoordType AxisXYScale = 2 : Public, Static, Literal, HasDefault
    ZedGraph.CoordType AxisXY2Scale = 3 : Public, Static, Literal, HasDefault
    ZedGraph.CoordType XChartFractionYPaneFraction = 4 : Public, Static, Literal, HasDefault
    ZedGraph.CoordType XPaneFractionYChartFraction = 5 : Public, Static, Literal, HasDefault
    ZedGraph.CoordType XScaleYChartFraction = 6 : Public, Static, Literal, HasDefault
    ZedGraph.CoordType XChartFractionYScale = 7 : Public, Static, Literal, HasDefault
    ZedGraph.CoordType XChartFractionY2Scale = 8 : Public, Static, Literal, HasDefault
Struct ZedGraph.StepType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ZedGraph.StepType ForwardStep = 0 : Public, Static, Literal, HasDefault
    ZedGraph.StepType RearwardStep = 1 : Public, Static, Literal, HasDefault
    ZedGraph.StepType NonStep = 2 : Public, Static, Literal, HasDefault
    ZedGraph.StepType ForwardSegment = 3 : Public, Static, Literal, HasDefault
    ZedGraph.StepType RearwardSegment = 4 : Public, Static, Literal, HasDefault
Struct ZedGraph.BarBase: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ZedGraph.BarBase X = 0 : Public, Static, Literal, HasDefault
    ZedGraph.BarBase X2 = 1 : Public, Static, Literal, HasDefault
    ZedGraph.BarBase Y = 2 : Public, Static, Literal, HasDefault
    ZedGraph.BarBase Y2 = 3 : Public, Static, Literal, HasDefault
Struct ZedGraph.LineType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ZedGraph.LineType Normal = 0 : Public, Static, Literal, HasDefault
    ZedGraph.LineType Stack = 1 : Public, Static, Literal, HasDefault
Struct ZedGraph.BarType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ZedGraph.BarType Cluster = 0 : Public, Static, Literal, HasDefault
    ZedGraph.BarType Overlay = 1 : Public, Static, Literal, HasDefault
    ZedGraph.BarType SortedOverlay = 2 : Public, Static, Literal, HasDefault
    ZedGraph.BarType Stack = 3 : Public, Static, Literal, HasDefault
    ZedGraph.BarType PercentStack = 4 : Public, Static, Literal, HasDefault
Struct ZedGraph.SortType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ZedGraph.SortType YValues = 0 : Public, Static, Literal, HasDefault
    ZedGraph.SortType XValues = 1 : Public, Static, Literal, HasDefault
Struct ZedGraph.ZOrder: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ZedGraph.ZOrder H_BehindAll = 0 : Public, Static, Literal, HasDefault
    ZedGraph.ZOrder G_BehindChartFill = 1 : Public, Static, Literal, HasDefault
    ZedGraph.ZOrder F_BehindGrid = 2 : Public, Static, Literal, HasDefault
    ZedGraph.ZOrder E_BehindCurves = 3 : Public, Static, Literal, HasDefault
    ZedGraph.ZOrder D_BehindAxis = 4 : Public, Static, Literal, HasDefault
    ZedGraph.ZOrder C_BehindChartBorder = 5 : Public, Static, Literal, HasDefault
    ZedGraph.ZOrder B_BehindLegend = 6 : Public, Static, Literal, HasDefault
    ZedGraph.ZOrder A_InFront = 7 : Public, Static, Literal, HasDefault
Struct ZedGraph.PieLabelType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ZedGraph.PieLabelType Name_Value = 0 : Public, Static, Literal, HasDefault
    ZedGraph.PieLabelType Name_Percent = 1 : Public, Static, Literal, HasDefault
    ZedGraph.PieLabelType Name_Value_Percent = 2 : Public, Static, Literal, HasDefault
    ZedGraph.PieLabelType Value = 3 : Public, Static, Literal, HasDefault
    ZedGraph.PieLabelType Percent = 4 : Public, Static, Literal, HasDefault
    ZedGraph.PieLabelType Name = 5 : Public, Static, Literal, HasDefault
    ZedGraph.PieLabelType None = 6 : Public, Static, Literal, HasDefault
Struct ZedGraph.PaneLayout: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ZedGraph.PaneLayout ForceSquare = 0 : Public, Static, Literal, HasDefault
    ZedGraph.PaneLayout SquareColPreferred = 1 : Public, Static, Literal, HasDefault
    ZedGraph.PaneLayout SquareRowPreferred = 2 : Public, Static, Literal, HasDefault
    ZedGraph.PaneLayout SingleRow = 3 : Public, Static, Literal, HasDefault
    ZedGraph.PaneLayout SingleColumn = 4 : Public, Static, Literal, HasDefault
    ZedGraph.PaneLayout ExplicitCol12 = 5 : Public, Static, Literal, HasDefault
    ZedGraph.PaneLayout ExplicitCol21 = 6 : Public, Static, Literal, HasDefault
    ZedGraph.PaneLayout ExplicitCol23 = 7 : Public, Static, Literal, HasDefault
    ZedGraph.PaneLayout ExplicitCol32 = 8 : Public, Static, Literal, HasDefault
    ZedGraph.PaneLayout ExplicitRow12 = 9 : Public, Static, Literal, HasDefault
    ZedGraph.PaneLayout ExplicitRow21 = 10 : Public, Static, Literal, HasDefault
    ZedGraph.PaneLayout ExplicitRow23 = 11 : Public, Static, Literal, HasDefault
    ZedGraph.PaneLayout ExplicitRow32 = 12 : Public, Static, Literal, HasDefault
Struct ZedGraph.RenderModeType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ZedGraph.RenderModeType ImageTag = 0 : Public, Static, Literal, HasDefault
    ZedGraph.RenderModeType RawImage = 1 : Public, Static, Literal, HasDefault
Class ZedGraph.PieItem: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.CurveItem
    Void .ctor(Double, System.Drawing.Color, System.Drawing.Color, Single, Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, System.Drawing.Color, Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.PieItem): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema2 = 10 : Public, Static, Literal, HasDefault
  Properties:
    Double Displacement 'get set' : 
    System.Drawing.Drawing2D.GraphicsPath SlicePath 'get ' : 
    ZedGraph.TextObj LabelDetail 'get set' : 
    ZedGraph.Border Border 'get set' : 
    ZedGraph.Fill Fill 'get set' : 
    Double Value 'get set' : 
    ZedGraph.PieLabelType LabelType 'get set' : 
    Int32 ValueDecimalDigits 'get set' : 
    Int32 PercentDecimalDigits 'get set' : 
  Methods:
    get_Displacement(): PrivateScope, Public, HideBySig, SpecialName
    set_Displacement(Double): PrivateScope, Public, HideBySig, SpecialName
    get_SlicePath(): PrivateScope, Public, HideBySig, SpecialName
    get_LabelDetail(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelDetail(TextObj): PrivateScope, Public, HideBySig, SpecialName
    get_Border(): PrivateScope, Public, HideBySig, SpecialName
    set_Border(Border): PrivateScope, Public, HideBySig, SpecialName
    get_Fill(): PrivateScope, Public, HideBySig, SpecialName
    set_Fill(Fill): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LabelType(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelType(PieLabelType): PrivateScope, Public, HideBySig, SpecialName
    get_ValueDecimalDigits(): PrivateScope, Public, HideBySig, SpecialName
    set_ValueDecimalDigits(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_PercentDecimalDigits(): PrivateScope, Public, HideBySig, SpecialName
    set_PercentDecimalDigits(Int32): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    Draw(Graphics, GraphPane, Int32, Single): PrivateScope, Public, Virtual, HideBySig
    CalcPieRect(Graphics, GraphPane, Single, RectangleF): PrivateScope, Public, Static, HideBySig
    DrawLabel(Graphics, GraphPane, RectangleF, Single): PrivateScope, Public, HideBySig
    DesignLabel(Graphics, GraphPane, RectangleF, Single): PrivateScope, Public, HideBySig
    DrawLegendKey(Graphics, GraphPane, RectangleF, Single): PrivateScope, Public, Virtual, HideBySig
    GetCoords(GraphPane, Int32, String&(Out)): PrivateScope, Public, Virtual, HideBySig
Struct ZedGraph.PieItem+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Double Displacement : Public, Static
    Single BorderWidth : Public, Static
    ZedGraph.FillType FillType : Public, Static
    Boolean IsBorderVisible : Public, Static
    System.Drawing.Color BorderColor : Public, Static
    System.Drawing.Color FillColor : Public, Static
    System.Drawing.Brush FillBrush : Public, Static
    Boolean isVisible : Public, Static
    ZedGraph.PieLabelType LabelType : Public, Static
    Single FontSize : Public, Static
    Int32 ValueDecimalDigits : Public, Static
    Int32 PercentDecimalDigits : Public, Static
Class ZedGraph.FontSpec: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Single, System.Drawing.Color, Boolean, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Single, System.Drawing.Color, Boolean, Boolean, Boolean, System.Drawing.Color, System.Drawing.Brush, ZedGraph.FillType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.FontSpec): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
    System.Runtime.Serialization.ISerializable
  Fields:
    Int32 schema = 10 : Public, Static, Literal, HasDefault
  Properties:
    System.Drawing.Color FontColor 'get set' : 
    System.String Family 'get set' : 
    Boolean IsBold 'get set' : 
    Boolean IsItalic 'get set' : 
    Boolean IsUnderline 'get set' : 
    Single Angle 'get set' : 
    System.Drawing.StringAlignment StringAlignment 'get set' : 
    Single Size 'get set' : 
    ZedGraph.Border Border 'get set' : 
    ZedGraph.Fill Fill 'get set' : 
    Boolean IsAntiAlias 'get set' : 
    Boolean IsDropShadow 'get set' : 
    System.Drawing.Color DropShadowColor 'get set' : 
    Single DropShadowAngle 'get set' : 
    Single DropShadowOffset 'get set' : 
  Methods:
    get_FontColor(): PrivateScope, Public, HideBySig, SpecialName
    set_FontColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_Family(): PrivateScope, Public, HideBySig, SpecialName
    set_Family(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsBold(): PrivateScope, Public, HideBySig, SpecialName
    set_IsBold(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsItalic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsItalic(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsUnderline(): PrivateScope, Public, HideBySig, SpecialName
    set_IsUnderline(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Angle(): PrivateScope, Public, HideBySig, SpecialName
    set_Angle(Single): PrivateScope, Public, HideBySig, SpecialName
    get_StringAlignment(): PrivateScope, Public, HideBySig, SpecialName
    set_StringAlignment(StringAlignment): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Border(): PrivateScope, Public, HideBySig, SpecialName
    set_Border(Border): PrivateScope, Public, HideBySig, SpecialName
    get_Fill(): PrivateScope, Public, HideBySig, SpecialName
    set_Fill(Fill): PrivateScope, Public, HideBySig, SpecialName
    get_IsAntiAlias(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAntiAlias(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsDropShadow(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDropShadow(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DropShadowColor(): PrivateScope, Public, HideBySig, SpecialName
    set_DropShadowColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_DropShadowAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_DropShadowAngle(Single): PrivateScope, Public, HideBySig, SpecialName
    get_DropShadowOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_DropShadowOffset(Single): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    GetFont(Single): PrivateScope, Public, HideBySig
    Draw(Graphics, PaneBase, String, Single, Single, AlignH, AlignV, Single): PrivateScope, Public, HideBySig
    Draw(Graphics, PaneBase, String, Single, Single, AlignH, AlignV, Single, SizeF): PrivateScope, Public, HideBySig
    DrawTenPower(Graphics, GraphPane, String, Single, Single, AlignH, AlignV, Single): PrivateScope, Public, HideBySig
    GetHeight(Single): PrivateScope, Public, HideBySig
    GetWidth(Graphics, Single): PrivateScope, Public, HideBySig
    GetWidth(Graphics, String, Single): PrivateScope, Public, HideBySig
    MeasureString(Graphics, String, Single): PrivateScope, Public, HideBySig
    MeasureString(Graphics, String, Single, SizeF): PrivateScope, Public, HideBySig
    BoundingBox(Graphics, String, Single): PrivateScope, Public, HideBySig
    BoundingBox(Graphics, String, Single, SizeF): PrivateScope, Public, HideBySig
    BoundingBoxTenPower(Graphics, String, Single): PrivateScope, Public, HideBySig
    PointInBox(PointF, Graphics, String, Single, Single, AlignH, AlignV, Single): PrivateScope, Public, HideBySig
    PointInBox(PointF, Graphics, String, Single, Single, AlignH, AlignV, Single, SizeF): PrivateScope, Public, HideBySig
    GetBox(Graphics, String, Single, Single, AlignH, AlignV, Single, SizeF): PrivateScope, Public, HideBySig
Struct ZedGraph.FontSpec+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single SuperSize : Public, Static
    Single SuperShift : Public, Static
    System.Drawing.Color FillColor : Public, Static
    System.Drawing.Brush FillBrush : Public, Static
    ZedGraph.FillType FillType : Public, Static
    System.Drawing.StringAlignment StringAlignment : Public, Static
    Boolean IsDropShadow : Public, Static
    Boolean IsAntiAlias : Public, Static
    System.Drawing.Color DropShadowColor : Public, Static
    Single DropShadowAngle : Public, Static
    Single DropShadowOffset : Public, Static
Class ZedGraph.StockPointList: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Collections.Generic.List`1[ZedGraph.StockPt]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.StockPointList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ZedGraph.IPointListEdit
    ZedGraph.IPointList
    System.ICloneable
  Properties:
    ZedGraph.PointPair Item [Int32] 'get set' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, PointPair): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    Add(StockPt): PrivateScope, Public, HideBySig
    Add(PointPair): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(Double, Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    GetAt(Int32): PrivateScope, Public, HideBySig
Class ZedGraph.ErrorBarItem: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.CurveItem
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Double[], Double[], Double[], System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, ZedGraph.IPointList, System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.ErrorBarItem): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema2 = 10 : Public, Static, Literal, HasDefault
  Properties:
    ZedGraph.ErrorBar Bar 'get ' : 
  Methods:
    get_Bar(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    Draw(Graphics, GraphPane, Int32, Single): PrivateScope, Public, Virtual, HideBySig
    DrawLegendKey(Graphics, GraphPane, RectangleF, Single): PrivateScope, Public, Virtual, HideBySig
    GetCoords(GraphPane, Int32, String&(Out)): PrivateScope, Public, Virtual, HideBySig
Class ZedGraph.Axis: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.Axis): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
    System.ICloneable
  Fields:
    System.Object Tag : Public
    Int32 schema = 10 : Public, Static, Literal, HasDefault
  Properties:
    ZedGraph.Scale Scale 'get ' : 
    Double Cross 'get set' : 
    Boolean CrossAuto 'get set' : 
    Single MinSpace 'get set' : 
    System.Drawing.Color Color 'get set' : 
    ZedGraph.MajorTic MajorTic 'get ' : 
    ZedGraph.MinorTic MinorTic 'get ' : 
    ZedGraph.MajorGrid MajorGrid 'get ' : 
    ZedGraph.MinorGrid MinorGrid 'get ' : 
    Boolean IsVisible 'get set' : 
    Boolean IsAxisSegmentVisible 'get set' : 
    ZedGraph.AxisType Type 'get set' : 
    ZedGraph.AxisLabel Title 'get set' : 
    Single AxisGap 'get set' : 
  Events:
    ScaleFormatHandler ScaleFormatEvent: 
    ScaleTitleEventHandler ScaleTitleEvent: 
  Methods:
    add_ScaleFormatEvent(ScaleFormatHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ScaleFormatEvent(ScaleFormatHandler): PrivateScope, Public, HideBySig, SpecialName
    add_ScaleTitleEvent(ScaleTitleEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ScaleTitleEvent(ScaleTitleEventHandler): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    get_Scale(): PrivateScope, Public, HideBySig, SpecialName
    get_Cross(): PrivateScope, Public, HideBySig, SpecialName
    set_Cross(Double): PrivateScope, Public, HideBySig, SpecialName
    get_CrossAuto(): PrivateScope, Public, HideBySig, SpecialName
    set_CrossAuto(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MinSpace(): PrivateScope, Public, HideBySig, SpecialName
    set_MinSpace(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    set_Color(Color): PrivateScope, Public, HideBySig, SpecialName
    get_MajorTic(): PrivateScope, Public, HideBySig, SpecialName
    get_MinorTic(): PrivateScope, Public, HideBySig, SpecialName
    get_MajorGrid(): PrivateScope, Public, HideBySig, SpecialName
    get_MinorGrid(): PrivateScope, Public, HideBySig, SpecialName
    get_IsVisible(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVisible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsAxisSegmentVisible(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAxisSegmentVisible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(AxisType): PrivateScope, Public, HideBySig, SpecialName
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(AxisLabel): PrivateScope, Public, HideBySig, SpecialName
    get_AxisGap(): PrivateScope, Public, HideBySig, SpecialName
    set_AxisGap(Single): PrivateScope, Public, HideBySig, SpecialName
    ResetAutoScale(GraphPane, Graphics): PrivateScope, Public, HideBySig
    Draw(Graphics, GraphPane, Single, Single): PrivateScope, Public, HideBySig
    SetMinSpaceBuffer(Graphics, GraphPane, Single, Boolean): PrivateScope, Public, HideBySig
    SetTransformMatrix(Graphics, GraphPane, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCrossAxis(GraphPane): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CalcSpace(Graphics, GraphPane, Single, Single&(Out)): PrivateScope, Public, HideBySig
    DrawMinorTics(Graphics, GraphPane, Double, Single, Single, Single): PrivateScope, Public, HideBySig
    DrawTitle(Graphics, GraphPane, Single, Single): PrivateScope, Public, HideBySig
Class ZedGraph.Axis+ScaleFormatHandler: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(GraphPane, Axis, Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(GraphPane, Axis, Double, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class ZedGraph.Axis+ScaleTitleEventHandler: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Axis): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Axis, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct ZedGraph.Axis+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single AxisGap : Public, Static
    Single TitleGap : Public, Static
    System.String TitleFontFamily : Public, Static
    Single TitleFontSize : Public, Static
    System.Drawing.Color TitleFontColor : Public, Static
    Boolean TitleFontBold : Public, Static
    Boolean TitleFontItalic : Public, Static
    Boolean TitleFontUnderline : Public, Static
    System.Drawing.Color TitleFillColor : Public, Static
    System.Drawing.Brush TitleFillBrush : Public, Static
    ZedGraph.FillType TitleFillType : Public, Static
    System.Drawing.Color BorderColor : Public, Static
    Boolean IsAxisSegmentVisible : Public, Static
    ZedGraph.AxisType Type : Public, Static
    System.Drawing.Color Color : Public, Static
    Single MinSpace : Public, Static
Class ZedGraph.MinorTic: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.MinorTic): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
    System.Runtime.Serialization.ISerializable
  Fields:
    Int32 schema = 10 : Public, Static, Literal, HasDefault
  Properties:
    System.Drawing.Color Color 'get set' : 
    Single Size 'get set' : 
    Boolean IsAllTics 'set' : 
    Boolean IsOutside 'get set' : 
    Boolean IsInside 'get set' : 
    Boolean IsOpposite 'get set' : 
    Boolean IsCrossOutside 'get set' : 
    Boolean IsCrossInside 'get set' : 
    Single PenWidth 'get set' : 
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    set_Color(Color): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Single): PrivateScope, Public, HideBySig, SpecialName
    ScaledTic(Single): PrivateScope, Public, HideBySig
    set_IsAllTics(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsOutside(): PrivateScope, Public, HideBySig, SpecialName
    set_IsOutside(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsInside(): PrivateScope, Public, HideBySig, SpecialName
    set_IsInside(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsOpposite(): PrivateScope, Public, HideBySig, SpecialName
    set_IsOpposite(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsCrossOutside(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCrossOutside(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsCrossInside(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCrossInside(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_PenWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_PenWidth(Single): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
Struct ZedGraph.MinorTic+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single Size : Public, Static
    Single PenWidth : Public, Static
    Boolean IsOutside : Public, Static
    Boolean IsInside : Public, Static
    Boolean IsOpposite : Public, Static
    Boolean IsCrossOutside : Public, Static
    Boolean IsCrossInside : Public, Static
    System.Drawing.Color Color : Public, Static
Class ZedGraph.ZedGraphException: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.ApplicationException
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct ZedGraph.XDate: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.DateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Int32, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.XDate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable
  Fields:
    Double XLDay1 = 2415018.5 : Public, Static, Literal, HasDefault
    Double JulDayMin = 0 : Public, Static, Literal, HasDefault
    Double JulDayMax = 5373483.5 : Public, Static, Literal, HasDefault
    Double XLDayMin = -2415018.5 : Public, Static, Literal, HasDefault
    Double XLDayMax = 2958465 : Public, Static, Literal, HasDefault
    Double MonthsPerYear = 12 : Public, Static, Literal, HasDefault
    Double HoursPerDay = 24 : Public, Static, Literal, HasDefault
    Double MinutesPerHour = 60 : Public, Static, Literal, HasDefault
    Double SecondsPerMinute = 60 : Public, Static, Literal, HasDefault
    Double MinutesPerDay = 1440 : Public, Static, Literal, HasDefault
    Double SecondsPerDay = 86400 : Public, Static, Literal, HasDefault
    Double MillisecondsPerSecond = 1000 : Public, Static, Literal, HasDefault
    Double MillisecondsPerDay = 86400000 : Public, Static, Literal, HasDefault
    System.String DefaultFormatStr = g : Public, Static, Literal, HasDefault
  Properties:
    Double XLDate 'get set' : 
    Boolean IsValidDate 'get ' : 
    System.DateTime DateTime 'get set' : 
    Double JulianDay 'get set' : 
    Double DecimalYear 'get set' : 
  Methods:
    get_XLDate(): PrivateScope, Public, HideBySig, SpecialName
    set_XLDate(Double): PrivateScope, Public, HideBySig, SpecialName
    get_IsValidDate(): PrivateScope, Public, HideBySig, SpecialName
    get_DateTime(): PrivateScope, Public, HideBySig, SpecialName
    set_DateTime(DateTime): PrivateScope, Public, HideBySig, SpecialName
    get_JulianDay(): PrivateScope, Public, HideBySig, SpecialName
    set_JulianDay(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DecimalYear(): PrivateScope, Public, HideBySig, SpecialName
    set_DecimalYear(Double): PrivateScope, Public, HideBySig, SpecialName
    MakeValidDate(Double): PrivateScope, Public, Static, HideBySig
    GetDate(Int32&(Out), Int32&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    SetDate(Int32, Int32, Int32): PrivateScope, Public, HideBySig
    GetDate(Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    SetDate(Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    GetDayOfYear(): PrivateScope, Public, HideBySig
    CalendarDateToXLDate(Int32, Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    CalendarDateToXLDate(Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    CalendarDateToXLDate(Int32, Int32, Int32, Int32, Int32, Double): PrivateScope, Public, Static, HideBySig
    CalendarDateToJulianDay(Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    CalendarDateToJulianDay(Int32, Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    XLDateToCalendarDate(Double, Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out)): PrivateScope, Public, Static, HideBySig
    XLDateToCalendarDate(Double, Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out)): PrivateScope, Public, Static, HideBySig
    XLDateToCalendarDate(Double, Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out), Double&(Out)): PrivateScope, Public, Static, HideBySig
    JulianDayToCalendarDate(Double, Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out)): PrivateScope, Public, Static, HideBySig
    JulianDayToCalendarDate(Double, Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out), Double&(Out)): PrivateScope, Public, Static, HideBySig
    JulianDayToCalendarDate(Double, Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out), Double&(Out)): PrivateScope, Public, Static, HideBySig
    XLDateToJulianDay(Double): PrivateScope, Public, Static, HideBySig
    JulianDayToXLDate(Double): PrivateScope, Public, Static, HideBySig
    XLDateToDecimalYear(Double): PrivateScope, Public, Static, HideBySig
    DecimalYearToXLDate(Double): PrivateScope, Public, Static, HideBySig
    XLDateToDayOfYear(Double): PrivateScope, Public, Static, HideBySig
    XLDateToDayOfWeek(Double): PrivateScope, Public, Static, HideBySig
    XLDateToDateTime(Double): PrivateScope, Public, Static, HideBySig
    DateTimeToXLDate(DateTime): PrivateScope, Public, Static, HideBySig
    AddMilliseconds(Double): PrivateScope, Public, HideBySig
    AddSeconds(Double): PrivateScope, Public, HideBySig
    AddMinutes(Double): PrivateScope, Public, HideBySig
    AddHours(Double): PrivateScope, Public, HideBySig
    AddDays(Double): PrivateScope, Public, HideBySig
    AddMonths(Double): PrivateScope, Public, HideBySig
    AddYears(Double): PrivateScope, Public, HideBySig
    op_Subtraction(XDate, XDate): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(XDate, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(XDate, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Increment(XDate): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Decrement(XDate): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(XDate): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(XDate): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(XDate): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(DateTime): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(Double): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String): PrivateScope, Public, HideBySig
    ToString(Double, String): PrivateScope, Public, Static, HideBySig
Class ZedGraph.Link: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.Link): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
    System.ICloneable
  Fields:
    System.Object Tag : Public
    Int32 schema = 10 : Public, Static, Literal, HasDefault
  Properties:
    System.String Title 'get set' : 
    System.String Url 'get set' : 
    System.String Target 'get set' : 
    Boolean IsEnabled 'get set' : 
    Boolean IsActive 'get ' : 
  Methods:
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(String): PrivateScope, Public, HideBySig, SpecialName
    get_Url(): PrivateScope, Public, HideBySig, SpecialName
    set_Url(String): PrivateScope, Public, HideBySig, SpecialName
    get_Target(): PrivateScope, Public, HideBySig, SpecialName
    set_Target(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_IsEnabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsActive(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    MakeCurveItemUrl(GraphPane, CurveItem, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
Class ZedGraph.BarItem: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.CurveItem
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Double[], Double[], System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, ZedGraph.IPointList, System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.BarItem): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema2 = 10 : Public, Static, Literal, HasDefault
  Properties:
    ZedGraph.Bar Bar 'get ' : 
  Methods:
    get_Bar(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    Draw(Graphics, GraphPane, Int32, Single): PrivateScope, Public, Virtual, HideBySig
    DrawLegendKey(Graphics, GraphPane, RectangleF, Single): PrivateScope, Public, Virtual, HideBySig
    CreateBarLabels(GraphPane, Boolean, String): PrivateScope, Public, Static, HideBySig
    CreateBarLabels(GraphPane, Boolean, String, String, Single, Color, Boolean, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    GetCoords(GraphPane, Int32, String&(Out)): PrivateScope, Public, Virtual, HideBySig
Class ZedGraph.Bar: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.Bar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
    System.Runtime.Serialization.ISerializable
  Fields:
    Int32 schema = 10 : Public, Static, Literal, HasDefault
  Properties:
    ZedGraph.Border Border 'get set' : 
    ZedGraph.Fill Fill 'get set' : 
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    get_Border(): PrivateScope, Public, HideBySig, SpecialName
    set_Border(Border): PrivateScope, Public, HideBySig, SpecialName
    get_Fill(): PrivateScope, Public, HideBySig, SpecialName
    set_Fill(Fill): PrivateScope, Public, HideBySig, SpecialName
    Draw(Graphics, GraphPane, Single, Single, Single, Single, Single, Boolean, Boolean, PointPair): PrivateScope, Public, HideBySig
    Draw(Graphics, GraphPane, RectangleF, Single, Boolean, Boolean, PointPair): PrivateScope, Public, HideBySig
    DrawBars(Graphics, GraphPane, CurveItem, Axis, Axis, Single, Int32, Single): PrivateScope, Public, HideBySig
    DrawSingleBar(Graphics, GraphPane, CurveItem, Axis, Axis, Int32, Int32, Single, Single): PrivateScope, Public, HideBySig
Struct ZedGraph.Bar+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single BorderWidth : Public, Static
    ZedGraph.FillType FillType : Public, Static
    Boolean IsBorderVisible : Public, Static
    System.Drawing.Color BorderColor : Public, Static
    System.Drawing.Color FillColor : Public, Static
    System.Drawing.Brush FillBrush : Public, Static
Class ZedGraph.Y2Axis: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.Axis
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.Y2Axis): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema2 = 10 : Public, Static, Literal, HasDefault
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    SetTransformMatrix(Graphics, GraphPane, Single): PrivateScope, Public, Virtual, HideBySig
    GetCrossAxis(GraphPane): PrivateScope, Public, Virtual, HideBySig
Struct ZedGraph.Y2Axis+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Boolean IsVisible : Public, Static
    Boolean IsZeroLine : Public, Static
Class ZedGraph.XAxis: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.Axis
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.XAxis): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema2 = 10 : Public, Static, Literal, HasDefault
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    SetTransformMatrix(Graphics, GraphPane, Single): PrivateScope, Public, Virtual, HideBySig
    GetCrossAxis(GraphPane): PrivateScope, Public, Virtual, HideBySig
Struct ZedGraph.XAxis+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Boolean IsVisible : Public, Static
    Boolean IsZeroLine : Public, Static
Class ZedGraph.RollingPointPairList: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.IPointList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
    ZedGraph.IPointListEdit
    ZedGraph.IPointList
    System.ICloneable
  Fields:
    Int32 schema = 10 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Capacity 'get ' : 
    Int32 Count 'get ' : 
    Boolean IsEmpty 'get ' : 
    ZedGraph.PointPair Item [Int32] 'get set' : 
  Methods:
    get_Capacity(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, PointPair): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(PointPair): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(IPointList): PrivateScope, Public, HideBySig
    Remove(): PrivateScope, Public, HideBySig
    RemoveAt(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RemoveRange(Int32, Int32): PrivateScope, Public, HideBySig
    Pop(): PrivateScope, Public, HideBySig
    Peek(): PrivateScope, Public, HideBySig
    Add(Double, Double, Double, Object): PrivateScope, Public, HideBySig
    Add(Double, Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(Double, Double, Object): PrivateScope, Public, HideBySig
    Add(Double, Double, Double): PrivateScope, Public, HideBySig
    Add(Double[], Double[]): PrivateScope, Public, HideBySig
    Add(Double[], Double[], Double[]): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
Class ZedGraph.PaneList: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Collections.Generic.List`1[ZedGraph.GraphPane]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.PaneList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Fields:
    Int32 schema = 10 : Public, Static, Literal, HasDefault
  Properties:
    ZedGraph.GraphPane Item [System.String] 'get ' : 
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    IndexOf(String): PrivateScope, Public, HideBySig
    IndexOfTag(String): PrivateScope, Public, HideBySig
Class ZedGraph.LineObj: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.GraphObj
    Void .ctor(System.Drawing.Color, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.LineObj): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema2 = 11 : Public, Static, Literal, HasDefault
  Properties:
    ZedGraph.LineBase Line 'get set' : 
  Methods:
    get_Line(): PrivateScope, Public, HideBySig, SpecialName
    set_Line(LineBase): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    Draw(Graphics, PaneBase, Single): PrivateScope, Public, Virtual, HideBySig
    PointInBox(PointF, PaneBase, Graphics, Single): PrivateScope, Public, Virtual, HideBySig
    GetCoords(PaneBase, Graphics, Single, String&(Out), String&(Out)): PrivateScope, Public, Virtual, HideBySig
Class ZedGraph.ErrorBar: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.ErrorBar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
    System.Runtime.Serialization.ISerializable
  Fields:
    Int32 schema = 10 : Public, Static, Literal, HasDefault
  Properties:
    Boolean IsVisible 'get set' : 
    System.Drawing.Color Color 'get set' : 
    Single PenWidth 'get set' : 
    ZedGraph.Symbol Symbol 'get set' : 
  Methods:
    get_IsVisible(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVisible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    set_Color(Color): PrivateScope, Public, HideBySig, SpecialName
    get_PenWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_PenWidth(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Symbol(): PrivateScope, Public, HideBySig, SpecialName
    set_Symbol(Symbol): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    Draw(Graphics, GraphPane, Boolean, Single, Single, Single, Single, Pen, Boolean, PointPair): PrivateScope, Public, HideBySig
    Draw(Graphics, GraphPane, ErrorBarItem, Axis, Axis, Single): PrivateScope, Public, HideBySig
Struct ZedGraph.ErrorBar+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single Size : Public, Static
    Single PenWidth : Public, Static
    Boolean IsVisible : Public, Static
    System.Drawing.Color Color : Public, Static
    ZedGraph.SymbolType Type : Public, Static
Class ZedGraph.BoxObj: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.GraphObj
    Void .ctor(Double, Double, Double, Double, System.Drawing.Color, System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double, System.Drawing.Color, System.Drawing.Color, System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.BoxObj): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema2 = 10 : Public, Static, Literal, HasDefault
  Properties:
    ZedGraph.Fill Fill 'get set' : 
    ZedGraph.Border Border 'get set' : 
  Methods:
    get_Fill(): PrivateScope, Public, HideBySig, SpecialName
    set_Fill(Fill): PrivateScope, Public, HideBySig, SpecialName
    get_Border(): PrivateScope, Public, HideBySig, SpecialName
    set_Border(Border): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    Draw(Graphics, PaneBase, Single): PrivateScope, Public, Virtual, HideBySig
    PointInBox(PointF, PaneBase, Graphics, Single): PrivateScope, Public, Virtual, HideBySig
    GetCoords(PaneBase, Graphics, Single, String&(Out), String&(Out)): PrivateScope, Public, Virtual, HideBySig
Struct ZedGraph.BoxObj+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single PenWidth : Public, Static
    System.Drawing.Color BorderColor : Public, Static
    System.Drawing.Color FillColor : Public, Static
Class ZedGraph.EllipseObj: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.BoxObj
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double, System.Drawing.Color, System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double, System.Drawing.Color, System.Drawing.Color, System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.BoxObj): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema3 = 10 : Public, Static, Literal, HasDefault
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    Draw(Graphics, PaneBase, Single): PrivateScope, Public, Virtual, HideBySig
    PointInBox(PointF, PaneBase, Graphics, Single): PrivateScope, Public, Virtual, HideBySig
Class ZedGraph.BarSettings: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(ZedGraph.GraphPane): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.BarSettings, ZedGraph.GraphPane): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
  Fields:
    Int32 schema = 10 : Public, Static, Literal, HasDefault
  Properties:
    Single MinClusterGap 'get set' : 
    Single MinBarGap 'get set' : 
    ZedGraph.BarBase Base 'get set' : 
    ZedGraph.BarType Type 'get set' : 
    Double ClusterScaleWidth 'get set' : 
    Boolean ClusterScaleWidthAuto 'get set' : 
  Methods:
    get_MinClusterGap(): PrivateScope, Public, HideBySig, SpecialName
    set_MinClusterGap(Single): PrivateScope, Public, HideBySig, SpecialName
    get_MinBarGap(): PrivateScope, Public, HideBySig, SpecialName
    set_MinBarGap(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Base(): PrivateScope, Public, HideBySig, SpecialName
    set_Base(BarBase): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(BarType): PrivateScope, Public, HideBySig, SpecialName
    get_ClusterScaleWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_ClusterScaleWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ClusterScaleWidthAuto(): PrivateScope, Public, HideBySig, SpecialName
    set_ClusterScaleWidthAuto(Boolean): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    CalcClusterScaleWidth(): PrivateScope, Public, HideBySig
    GetClusterWidth(): PrivateScope, Public, HideBySig
    BarBaseAxis(): PrivateScope, Public, HideBySig
Struct ZedGraph.BarSettings+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single MinClusterGap : Public, Static
    Single MinBarGap : Public, Static
    ZedGraph.BarBase Base : Public, Static
    ZedGraph.BarType Type : Public, Static
    Double ClusterScaleWidth : Public, Static
    Boolean ClusterScaleWidthAuto : Public, Static
Class ZedGraph.AxisLabel: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.GapLabel
    Void .ctor(System.String, System.String, Single, System.Drawing.Color, Boolean, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.AxisLabel): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema3 = 10 : Public, Static, Literal, HasDefault
  Properties:
    Boolean IsOmitMag 'get set' : 
    Boolean IsTitleAtCross 'get set' : 
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    get_IsOmitMag(): PrivateScope, Public, HideBySig, SpecialName
    set_IsOmitMag(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitleAtCross(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleAtCross(Boolean): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
Class ZedGraph.PolyObj: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.BoxObj
    Void .ctor(ZedGraph.PointD[], System.Drawing.Color, System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.PointD[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.PointD[], System.Drawing.Color, System.Drawing.Color, System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.PolyObj): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema3 = 11 : Public, Static, Literal, HasDefault
  Properties:
    ZedGraph.PointD[] Points 'get set' : 
    Boolean IsClosedFigure 'get set' : 
  Methods:
    get_Points(): PrivateScope, Public, HideBySig, SpecialName
    set_Points(PointD[]): PrivateScope, Public, HideBySig, SpecialName
    get_IsClosedFigure(): PrivateScope, Public, HideBySig, SpecialName
    set_IsClosedFigure(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    Draw(Graphics, PaneBase, Single): PrivateScope, Public, Virtual, HideBySig
    PointInBox(PointF, PaneBase, Graphics, Single): PrivateScope, Public, Virtual, HideBySig
Class ZedGraph.ImageObj: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.GraphObj
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Image, System.Drawing.RectangleF): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Image, System.Drawing.RectangleF, ZedGraph.CoordType, ZedGraph.AlignH, ZedGraph.AlignV): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Image, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.ImageObj): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema2 = 10 : Public, Static, Literal, HasDefault
  Properties:
    System.Drawing.Image Image 'get set' : 
    Boolean IsScaled 'get set' : 
  Methods:
    get_Image(): PrivateScope, Public, HideBySig, SpecialName
    set_Image(Image): PrivateScope, Public, HideBySig, SpecialName
    get_IsScaled(): PrivateScope, Public, HideBySig, SpecialName
    set_IsScaled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    Draw(Graphics, PaneBase, Single): PrivateScope, Public, Virtual, HideBySig
    PointInBox(PointF, PaneBase, Graphics, Single): PrivateScope, Public, Virtual, HideBySig
    GetCoords(PaneBase, Graphics, Single, String&(Out), String&(Out)): PrivateScope, Public, Virtual, HideBySig
Struct ZedGraph.ImageObj+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Boolean IsScaled : Public, Static
Class ZedGraph.GraphPane: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.PaneBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.RectangleF, System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.GraphPane): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
  Fields:
    Int32 schema2 = 11 : Public, Static, Literal, HasDefault
  Properties:
    ZedGraph.CurveList CurveList 'get set' : 
    ZedGraph.XAxis XAxis 'get ' : 
    ZedGraph.X2Axis X2Axis 'get ' : 
    ZedGraph.YAxis YAxis 'get ' : 
    ZedGraph.Y2Axis Y2Axis 'get ' : 
    ZedGraph.YAxisList YAxisList 'get ' : 
    ZedGraph.Y2AxisList Y2AxisList 'get ' : 
    ZedGraph.Chart Chart 'get ' : 
    ZedGraph.BarSettings BarSettings 'get ' : 
    Boolean IsIgnoreInitial 'get set' : 
    Boolean IsBoundedRanges 'get set' : 
    Boolean IsIgnoreMissing 'get set' : 
    Boolean IsAlignGrids 'get set' : 
    ZedGraph.LineType LineType 'get set' : 
    Boolean IsZoomed 'get ' : 
    ZedGraph.ZoomStateStack ZoomStack 'get ' : 
  Events:
    AxisChangeEventHandler AxisChangeEvent: 
  Methods:
    add_AxisChangeEvent(AxisChangeEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_AxisChangeEvent(AxisChangeEventHandler): PrivateScope, Public, HideBySig, SpecialName
    get_CurveList(): PrivateScope, Public, HideBySig, SpecialName
    set_CurveList(CurveList): PrivateScope, Public, HideBySig, SpecialName
    get_XAxis(): PrivateScope, Public, HideBySig, SpecialName
    get_X2Axis(): PrivateScope, Public, HideBySig, SpecialName
    get_YAxis(): PrivateScope, Public, HideBySig, SpecialName
    get_Y2Axis(): PrivateScope, Public, HideBySig, SpecialName
    get_YAxisList(): PrivateScope, Public, HideBySig, SpecialName
    get_Y2AxisList(): PrivateScope, Public, HideBySig, SpecialName
    get_Chart(): PrivateScope, Public, HideBySig, SpecialName
    get_BarSettings(): PrivateScope, Public, HideBySig, SpecialName
    get_IsIgnoreInitial(): PrivateScope, Public, HideBySig, SpecialName
    set_IsIgnoreInitial(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsBoundedRanges(): PrivateScope, Public, HideBySig, SpecialName
    set_IsBoundedRanges(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsIgnoreMissing(): PrivateScope, Public, HideBySig, SpecialName
    set_IsIgnoreMissing(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsAlignGrids(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAlignGrids(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_LineType(): PrivateScope, Public, HideBySig, SpecialName
    set_LineType(LineType): PrivateScope, Public, HideBySig, SpecialName
    get_IsZoomed(): PrivateScope, Public, HideBySig, SpecialName
    get_ZoomStack(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    AxisChange(): PrivateScope, Public, HideBySig
    AxisChange(Graphics): PrivateScope, Public, HideBySig
    Draw(Graphics): PrivateScope, Public, Virtual, HideBySig
    CalcChartRect(Graphics): PrivateScope, Public, HideBySig
    CalcChartRect(Graphics, Single): PrivateScope, Public, HideBySig
    SetMinSpaceBuffer(Graphics, Single, Boolean): PrivateScope, Public, HideBySig
    AddCurve(String, Double[], Double[], Color): PrivateScope, Public, HideBySig
    AddCurve(String, IPointList, Color): PrivateScope, Public, HideBySig
    AddCurve(String, Double[], Double[], Color, SymbolType): PrivateScope, Public, HideBySig
    AddCurve(String, IPointList, Color, SymbolType): PrivateScope, Public, HideBySig
    AddStick(String, Double[], Double[], Color): PrivateScope, Public, HideBySig
    AddStick(String, IPointList, Color): PrivateScope, Public, HideBySig
    AddOHLCBar(String, IPointList, Color): PrivateScope, Public, HideBySig
    AddJapaneseCandleStick(String, IPointList): PrivateScope, Public, HideBySig
    AddErrorBar(String, Double[], Double[], Double[], Color): PrivateScope, Public, HideBySig
    AddErrorBar(String, IPointList, Color): PrivateScope, Public, HideBySig
    AddBar(String, IPointList, Color): PrivateScope, Public, HideBySig
    AddBar(String, Double[], Double[], Color): PrivateScope, Public, HideBySig
    AddHiLowBar(String, Double[], Double[], Double[], Color): PrivateScope, Public, HideBySig
    AddHiLowBar(String, IPointList, Color): PrivateScope, Public, HideBySig
    AddPieSlice(Double, Color, Double, String): PrivateScope, Public, HideBySig
    AddPieSlice(Double, Color, Color, Single, Double, String): PrivateScope, Public, HideBySig
    AddPieSlices(Double[], String[]): PrivateScope, Public, HideBySig
    GeneralTransform(PointF, CoordType): PrivateScope, Public, HideBySig
    GeneralTransform(Double, Double, CoordType): PrivateScope, Public, HideBySig
    ReverseTransform(PointF, Double&(Out), Double&(Out)): PrivateScope, Public, HideBySig
    ReverseTransform(PointF, Double&(Out), Double&(Out), Double&(Out), Double&(Out)): PrivateScope, Public, HideBySig
    ReverseTransform(PointF, Boolean, Boolean, Int32, Double&(Out), Double&(Out)): PrivateScope, Public, HideBySig
    ReverseTransform(PointF, Double&(Out), Double&(Out), Double[]&(Out), Double[]&(Out)): PrivateScope, Public, HideBySig
    AddYAxis(String): PrivateScope, Public, HideBySig
    AddY2Axis(String): PrivateScope, Public, HideBySig
    FindNearestObject(PointF, Graphics, Object&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    FindNearestPoint(PointF, CurveItem, CurveItem&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    FindNearestPoint(PointF, CurveItem&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    FindNearestPoint(PointF, CurveList, CurveItem&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    FindLinkableObject(PointF, Graphics, Single, Object&(Out), Link&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    FindContainedObjects(RectangleF, Graphics, CurveList&(Out)): PrivateScope, Public, HideBySig
Class ZedGraph.GraphPane+AxisChangeEventHandler: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(GraphPane): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(GraphPane, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct ZedGraph.GraphPane+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Boolean IsIgnoreInitial : Public, Static
    Boolean IsBoundedRanges : Public, Static
    ZedGraph.LineType LineType : Public, Static
    Double ClusterScaleWidth : Public, Static
    Double NearestTol : Public, Static
Struct ZedGraph.PointD: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Double X : Public
    Double Y : Public
Class ZedGraph.MajorGrid: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.MinorGrid
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.MajorGrid): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema2 = 10 : Public, Static, Literal, HasDefault
  Properties:
    Boolean IsZeroLine 'get set' : 
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    get_IsZeroLine(): PrivateScope, Public, HideBySig, SpecialName
    set_IsZeroLine(Boolean): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
Struct ZedGraph.MajorGrid+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single DashOn : Public, Static
    Single DashOff : Public, Static
    Single PenWidth : Public, Static
    System.Drawing.Color Color : Public, Static
    Boolean IsVisible : Public, Static
    Boolean IsZeroLine : Public, Static
Class ZedGraph.GasGaugeNeedle: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.CurveItem
    Void .ctor(System.String, Double, System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.GasGaugeNeedle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema2 = 10 : Public, Static, Literal, HasDefault
  Properties:
    Single NeedleWidth 'get set' : 
    ZedGraph.Border Border 'get set' : 
    System.Drawing.Drawing2D.GraphicsPath SlicePath 'get ' : 
    ZedGraph.TextObj LabelDetail 'get set' : 
    System.Drawing.Color NeedleColor 'get set' : 
    ZedGraph.Fill Fill 'get set' : 
    Double NeedleValue 'get set' : 
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    get_NeedleWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_NeedleWidth(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Border(): PrivateScope, Public, HideBySig, SpecialName
    set_Border(Border): PrivateScope, Public, HideBySig, SpecialName
    get_SlicePath(): PrivateScope, Public, HideBySig, SpecialName
    get_LabelDetail(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelDetail(TextObj): PrivateScope, Public, HideBySig, SpecialName
    get_NeedleColor(): PrivateScope, Public, HideBySig, SpecialName
    set_NeedleColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_Fill(): PrivateScope, Public, HideBySig, SpecialName
    set_Fill(Fill): PrivateScope, Public, HideBySig, SpecialName
    get_NeedleValue(): PrivateScope, Public, HideBySig, SpecialName
    set_NeedleValue(Double): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    Draw(Graphics, GraphPane, Int32, Single): PrivateScope, Public, Virtual, HideBySig
    DrawLegendKey(Graphics, GraphPane, RectangleF, Single): PrivateScope, Public, Virtual, HideBySig
    GetCoords(GraphPane, Int32, String&(Out)): PrivateScope, Public, Virtual, HideBySig
    CalculateGasGaugeParameters(GraphPane): PrivateScope, Public, Static, HideBySig
    CalcRectangle(Graphics, GraphPane, Single, RectangleF): PrivateScope, Public, Static, HideBySig
Struct ZedGraph.GasGaugeNeedle+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single NeedleWidth : Public, Static
    Single BorderWidth : Public, Static
    Boolean IsBorderVisible : Public, Static
    System.Drawing.Color BorderColor : Public, Static
    ZedGraph.FillType FillType : Public, Static
    System.Drawing.Color FillColor : Public, Static
    System.Drawing.Brush FillBrush : Public, Static
    Boolean isVisible : Public, Static
    Single FontSize : Public, Static
Class ZedGraph.DataSourcePointList: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.DataSourcePointList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ZedGraph.IPointList
    System.ICloneable
  Properties:
    ZedGraph.PointPair Item [Int32] 'get ' : 
    Int32 Count 'get ' : 
    System.Windows.Forms.BindingSource BindingSource 'get ' : 
    System.Object DataSource 'get set' : 
    System.String XDataMember 'get set' : 
    System.String YDataMember 'get set' : 
    System.String ZDataMember 'get set' : 
    System.String TagDataMember 'get set' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BindingSource(): PrivateScope, Public, HideBySig, SpecialName
    get_DataSource(): PrivateScope, Public, HideBySig, SpecialName
    set_DataSource(Object): PrivateScope, Public, HideBySig, SpecialName
    get_XDataMember(): PrivateScope, Public, HideBySig, SpecialName
    set_XDataMember(String): PrivateScope, Public, HideBySig, SpecialName
    get_YDataMember(): PrivateScope, Public, HideBySig, SpecialName
    set_YDataMember(String): PrivateScope, Public, HideBySig, SpecialName
    get_ZDataMember(): PrivateScope, Public, HideBySig, SpecialName
    set_ZDataMember(String): PrivateScope, Public, HideBySig, SpecialName
    get_TagDataMember(): PrivateScope, Public, HideBySig, SpecialName
    set_TagDataMember(String): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
Class ZedGraph.Symbol: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.SymbolType, System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.Symbol): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
    System.Runtime.Serialization.ISerializable
  Fields:
    Int32 schema = 11 : Public, Static, Literal, HasDefault
  Properties:
    Single Size 'get set' : 
    ZedGraph.SymbolType Type 'get set' : 
    Boolean IsAntiAlias 'get set' : 
    Boolean IsVisible 'get set' : 
    ZedGraph.Fill Fill 'get set' : 
    ZedGraph.Border Border 'get set' : 
    System.Drawing.Drawing2D.GraphicsPath UserSymbol 'get set' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(SymbolType): PrivateScope, Public, HideBySig, SpecialName
    get_IsAntiAlias(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAntiAlias(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsVisible(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVisible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Fill(): PrivateScope, Public, HideBySig, SpecialName
    set_Fill(Fill): PrivateScope, Public, HideBySig, SpecialName
    get_Border(): PrivateScope, Public, HideBySig, SpecialName
    set_Border(Border): PrivateScope, Public, HideBySig, SpecialName
    get_UserSymbol(): PrivateScope, Public, HideBySig, SpecialName
    set_UserSymbol(GraphicsPath): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    DrawSymbol(Graphics, GraphPane, Int32, Int32, Single, Boolean, PointPair): PrivateScope, Public, HideBySig
    MakePath(Graphics, Single): PrivateScope, Public, HideBySig
    Draw(Graphics, GraphPane, LineItem, Single, Boolean): PrivateScope, Public, HideBySig
Struct ZedGraph.Symbol+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single Size : Public, Static
    Single PenWidth : Public, Static
    System.Drawing.Color FillColor : Public, Static
    System.Drawing.Brush FillBrush : Public, Static
    ZedGraph.FillType FillType : Public, Static
    ZedGraph.SymbolType Type : Public, Static
    Boolean IsAntiAlias : Public, Static
    Boolean IsVisible : Public, Static
    Boolean IsBorderVisible : Public, Static
    System.Drawing.Color BorderColor : Public, Static
Class ZedGraph.ScrollRangeList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Collections.Generic.List`1[ZedGraph.ScrollRange]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.ScrollRangeList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Properties:
    ZedGraph.ScrollRange Item [Int32] 'get set' : 
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, ScrollRange): PrivateScope, Public, HideBySig, SpecialName
Struct ZedGraph.ScrollRange: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.ScrollRange): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsScrollable 'get set' : 
    Double Min 'get set' : 
    Double Max 'get set' : 
  Methods:
    get_IsScrollable(): PrivateScope, Public, HideBySig, SpecialName
    set_IsScrollable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Min(): PrivateScope, Public, HideBySig, SpecialName
    set_Min(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Max(): PrivateScope, Public, HideBySig, SpecialName
    set_Max(Double): PrivateScope, Public, HideBySig, SpecialName
Struct ZedGraph.SampleType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ZedGraph.SampleType Time = 0 : Public, Static, Literal, HasDefault
    ZedGraph.SampleType Position = 1 : Public, Static, Literal, HasDefault
    ZedGraph.SampleType VelocityInst = 2 : Public, Static, Literal, HasDefault
    ZedGraph.SampleType TimeDiff = 3 : Public, Static, Literal, HasDefault
    ZedGraph.SampleType VelocityAvg = 4 : Public, Static, Literal, HasDefault
Class ZedGraph.Sample: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.DateTime Time 'get set' : 
    Double Position 'get set' : 
    Double Velocity 'get set' : 
  Methods:
    get_Time(): PrivateScope, Public, HideBySig, SpecialName
    set_Time(DateTime): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Velocity(): PrivateScope, Public, HideBySig, SpecialName
    set_Velocity(Double): PrivateScope, Public, HideBySig, SpecialName
Class ZedGraph.SamplePointList: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.SamplePointList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ZedGraph.IPointList
    System.ICloneable
  Fields:
    ZedGraph.SampleType XType : Public
    ZedGraph.SampleType YType : Public
  Properties:
    ZedGraph.PointPair Item [Int32] 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetValue(Sample, SampleType): PrivateScope, Public, HideBySig
    Add(Sample): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, HideBySig
Struct ZedGraph.PerfDataType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ZedGraph.PerfDataType Time = 0 : Public, Static, Literal, HasDefault
    ZedGraph.PerfDataType Distance = 1 : Public, Static, Literal, HasDefault
    ZedGraph.PerfDataType Velocity = 2 : Public, Static, Literal, HasDefault
    ZedGraph.PerfDataType Acceleration = 3 : Public, Static, Literal, HasDefault
Class ZedGraph.PerformanceData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Double time : Public
    Double distance : Public
    Double velocity : Public
    Double acceleration : Public
  Properties:
    Double Item [ZedGraph.PerfDataType] 'get set' : 
  Methods:
    get_Item(PerfDataType): PrivateScope, Public, HideBySig, SpecialName
    set_Item(PerfDataType, Double): PrivateScope, Public, HideBySig, SpecialName
Class ZedGraph.SampleMultiPointList: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.SampleMultiPointList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ZedGraph.IPointList
    System.ICloneable
  Fields:
    ZedGraph.PerfDataType XData : Public
    ZedGraph.PerfDataType YData : Public
  Properties:
    ZedGraph.PointPair Item [Int32] 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(PerformanceData): PrivateScope, Public, HideBySig
    RemoveAt(Int32): PrivateScope, Public, HideBySig
    Insert(Int32, PerformanceData): PrivateScope, Public, HideBySig
Class ZedGraph.PointPairCV: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :ZedGraph.PointPair
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema3 = 11 : Public, Static, Literal, HasDefault
  Properties:
    Double ColorValue 'get set' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    get_ColorValue(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ColorValue(Double): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class ZedGraph.Border: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.LineBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, System.Drawing.Color, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.Border): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema = 11 : Public, Static, Literal, HasDefault
  Properties:
    Single InflateFactor 'get set' : 
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    get_InflateFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_InflateFactor(Single): PrivateScope, Public, HideBySig, SpecialName
    Draw(Graphics, PaneBase, Single, RectangleF): PrivateScope, Public, HideBySig
Struct ZedGraph.Border+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single InflateFactor : Public, Static
Class ZedGraph.X2Axis: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.Axis
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.X2Axis): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema2 = 11 : Public, Static, Literal, HasDefault
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    SetTransformMatrix(Graphics, GraphPane, Single): PrivateScope, Public, Virtual, HideBySig
    GetCrossAxis(GraphPane): PrivateScope, Public, Virtual, HideBySig
Struct ZedGraph.X2Axis+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Boolean IsVisible : Public, Static
    Boolean IsZeroLine : Public, Static
Struct ZedGraph.DataPoint: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Double X : Public
    Double Y : Public
Class ZedGraph.NoDupePointList: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Collections.Generic.List`1[ZedGraph.DataPoint]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.NoDupePointList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ZedGraph.IPointListEdit
    ZedGraph.IPointList
    System.ICloneable
  Properties:
    Int32 FilterMode 'get set' : 
    Boolean IsFiltered 'get ' : 
    ZedGraph.PointPair Item [Int32] 'get set' : 
    Int32 Count 'get ' : 
    Int32 TotalCount 'get ' : 
  Methods:
    get_FilterMode(): PrivateScope, Public, HideBySig, SpecialName
    set_FilterMode(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IsFiltered(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, PointPair): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TotalCount(): PrivateScope, Public, HideBySig, SpecialName
    Add(PointPair): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(Double, Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, HideBySig
    ClearFilter(): PrivateScope, Public, HideBySig
    FilterData(GraphPane, Axis, Axis): PrivateScope, Public, HideBySig
Class ZedGraph.Margin: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.Margin): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
    System.Runtime.Serialization.ISerializable
  Fields:
    Int32 schema = 10 : Public, Static, Literal, HasDefault
  Properties:
    Single Left 'get set' : 
    Single Right 'get set' : 
    Single Top 'get set' : 
    Single Bottom 'get set' : 
    Single All 'set' : 
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    set_Left(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    set_Right(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, HideBySig, SpecialName
    set_Top(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, HideBySig, SpecialName
    set_Bottom(Single): PrivateScope, Public, HideBySig, SpecialName
    set_All(Single): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
Class ZedGraph.Margin+Default: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Single Left : Public, Static
    Single Right : Public, Static
    Single Top : Public, Static
    Single Bottom : Public, Static
Class ZedGraph.FilteredPointList: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(Double[], Double[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.FilteredPointList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ZedGraph.IPointList
    System.ICloneable
  Properties:
    ZedGraph.PointPair Item [Int32] 'get set' : 
    Int32 Count 'get ' : 
    Int32 MaxPts 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, PointPair): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MaxPts(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetBounds(Double, Double, Int32): PrivateScope, Public, HideBySig
Class ZedGraph.HiLowBarItem: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.BarItem
    Void .ctor(System.String, Double[], Double[], Double[], System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, ZedGraph.IPointList, System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.HiLowBarItem): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema3 = 11 : Public, Static, Literal, HasDefault
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
Class ZedGraph.ZoomStateStack: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Collections.Generic.List`1[ZedGraph.ZoomState]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.ZoomStateStack): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Properties:
    Boolean IsEmpty 'get ' : 
    ZedGraph.ZoomState Top 'get ' : 
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    Push(GraphPane, StateType): PrivateScope, Public, HideBySig
    Push(ZoomState): PrivateScope, Public, HideBySig
    Pop(GraphPane): PrivateScope, Public, HideBySig
    PopAll(GraphPane): PrivateScope, Public, HideBySig
    get_Top(): PrivateScope, Public, HideBySig, SpecialName
Class ZedGraph.TextObj: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.GraphObj
    Void .ctor(System.String, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Double, Double, ZedGraph.CoordType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Double, Double, ZedGraph.CoordType, ZedGraph.AlignH, ZedGraph.AlignV): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.TextObj): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema2 = 10 : Public, Static, Literal, HasDefault
  Properties:
    System.Drawing.SizeF LayoutArea 'get set' : 
    System.String Text 'get set' : 
    ZedGraph.FontSpec FontSpec 'get set' : 
  Methods:
    get_LayoutArea(): PrivateScope, Public, HideBySig, SpecialName
    set_LayoutArea(SizeF): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_FontSpec(): PrivateScope, Public, HideBySig, SpecialName
    set_FontSpec(FontSpec): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    Draw(Graphics, PaneBase, Single): PrivateScope, Public, Virtual, HideBySig
    PointInBox(PointF, PaneBase, Graphics, Single): PrivateScope, Public, Virtual, HideBySig
    GetCoords(PaneBase, Graphics, Single, String&(Out), String&(Out)): PrivateScope, Public, Virtual, HideBySig
Struct ZedGraph.TextObj+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.String FontFamily : Public, Static
    Single FontSize : Public, Static
    System.Drawing.Color FontColor : Public, Static
    Boolean FontBold : Public, Static
    Boolean FontUnderline : Public, Static
    Boolean FontItalic : Public, Static
Class ZedGraph.Line: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.LineBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.Line): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema = 14 : Public, Static, Literal, HasDefault
  Properties:
    Boolean IsSmooth 'get set' : 
    Single SmoothTension 'get set' : 
    ZedGraph.StepType StepType 'get set' : 
    ZedGraph.Fill Fill 'get set' : 
    Boolean IsOptimizedDraw 'get set' : 
  Methods:
    get_IsSmooth(): PrivateScope, Public, HideBySig, SpecialName
    set_IsSmooth(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SmoothTension(): PrivateScope, Public, HideBySig, SpecialName
    set_SmoothTension(Single): PrivateScope, Public, HideBySig, SpecialName
    get_StepType(): PrivateScope, Public, HideBySig, SpecialName
    set_StepType(StepType): PrivateScope, Public, HideBySig, SpecialName
    get_Fill(): PrivateScope, Public, HideBySig, SpecialName
    set_Fill(Fill): PrivateScope, Public, HideBySig, SpecialName
    get_IsOptimizedDraw(): PrivateScope, Public, HideBySig, SpecialName
    set_IsOptimizedDraw(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    Draw(Graphics, GraphPane, CurveItem, Single): PrivateScope, Public, HideBySig
    DrawSegment(Graphics, GraphPane, Single, Single, Single, Single, Single): PrivateScope, Public, HideBySig
    DrawSticks(Graphics, GraphPane, CurveItem, Single): PrivateScope, Public, HideBySig
    DrawSmoothFilledCurve(Graphics, GraphPane, CurveItem, Single): PrivateScope, Public, HideBySig
    DrawCurve(Graphics, GraphPane, CurveItem, Single): PrivateScope, Public, HideBySig
    DrawCurveOriginal(Graphics, GraphPane, CurveItem, Single): PrivateScope, Public, HideBySig
    BuildPointsArray(GraphPane, CurveItem, PointF[]&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    BuildLowPointsArray(GraphPane, CurveItem, PointF[]&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    CloseCurve(GraphPane, CurveItem, PointF[], Int32, Double, GraphicsPath): PrivateScope, Public, HideBySig
Struct ZedGraph.Line+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.Drawing.Color Color : Public, Static
    System.Drawing.Color FillColor : Public, Static
    System.Drawing.Brush FillBrush : Public, Static
    ZedGraph.FillType FillType : Public, Static
    Boolean IsSmooth : Public, Static
    Single SmoothTension : Public, Static
    Boolean IsOptimizedDraw : Public, Static
    ZedGraph.StepType StepType : Public, Static
Class ZedGraph.ArrowObj: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.LineObj
    Void .ctor(System.Drawing.Color, Single, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.ArrowObj): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema3 = 10 : Public, Static, Literal, HasDefault
  Properties:
    Single Size 'get set' : 
    Boolean IsArrowHead 'get set' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Single): PrivateScope, Public, HideBySig, SpecialName
    get_IsArrowHead(): PrivateScope, Public, HideBySig, SpecialName
    set_IsArrowHead(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    Draw(Graphics, PaneBase, Single): PrivateScope, Public, Virtual, HideBySig
Struct ZedGraph.ArrowObj+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single Size : Public, Static
    Boolean IsArrowHead : Public, Static
Class ZedGraph.YAxis: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.Axis
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.YAxis): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema2 = 10 : Public, Static, Literal, HasDefault
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    SetTransformMatrix(Graphics, GraphPane, Single): PrivateScope, Public, Virtual, HideBySig
    GetCrossAxis(GraphPane): PrivateScope, Public, Virtual, HideBySig
Struct ZedGraph.YAxis+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Boolean IsVisible : Public, Static
    Boolean IsZeroLine : Public, Static
Class ZedGraph.PointPairList: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Collections.Generic.List`1[ZedGraph.PointPair]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double[], Double[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.IPointList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double[], Double[], Double[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.PointPairList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ZedGraph.IPointListEdit
    ZedGraph.IPointList
    System.ICloneable
  Properties:
    Boolean Sorted 'get ' : 
  Methods:
    get_Sorted(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    Add(PointPair): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(PointPairList): PrivateScope, Public, HideBySig
    Add(Double[], Double[]): PrivateScope, Public, HideBySig
    Add(Double[], Double[], Double[]): PrivateScope, Public, HideBySig
    Add(Double, Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(Double, Double, String): PrivateScope, Public, HideBySig
    Add(Double, Double, Double): PrivateScope, Public, HideBySig
    Add(Double, Double, Double, String): PrivateScope, Public, HideBySig
    Insert(Int32, PointPair): PrivateScope, Public, HideBySig
    Insert(Int32, Double, Double): PrivateScope, Public, HideBySig
    Insert(Int32, Double, Double, Double): PrivateScope, Public, HideBySig
    IndexOfTag(String): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Sort(): PrivateScope, Public, HideBySig
    Sort(SortType): PrivateScope, Public, HideBySig
    SetX(Double[]): PrivateScope, Public, HideBySig
    SetY(Double[]): PrivateScope, Public, HideBySig
    SetZ(Double[]): PrivateScope, Public, HideBySig
    SumY(PointPairList): PrivateScope, Public, HideBySig
    SumX(PointPairList): PrivateScope, Public, HideBySig
    InterpolateX(Double): PrivateScope, Public, HideBySig
    SplineInterpolateX(Double, Double): PrivateScope, Public, HideBySig
    InterpolateY(Double): PrivateScope, Public, HideBySig
    LinearRegression(IPointList, Int32): PrivateScope, Public, HideBySig
    LinearRegression(IPointList, Int32, Double, Double): PrivateScope, Public, HideBySig
Class ZedGraph.MajorTic: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.MinorTic
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.MajorTic): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema2 = 10 : Public, Static, Literal, HasDefault
  Properties:
    Boolean IsBetweenLabels 'get set' : 
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    get_IsBetweenLabels(): PrivateScope, Public, HideBySig, SpecialName
    set_IsBetweenLabels(Boolean): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
Struct ZedGraph.MajorTic+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single Size : Public, Static
    Single PenWidth : Public, Static
    Boolean IsOutside : Public, Static
    Boolean IsInside : Public, Static
    Boolean IsOpposite : Public, Static
    Boolean IsCrossOutside : Public, Static
    Boolean IsCrossInside : Public, Static
    System.Drawing.Color Color : Public, Static
Class ZedGraph.JapaneseCandleStickItem: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.CurveItem
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, ZedGraph.IPointList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.JapaneseCandleStickItem): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema2 = 10 : Public, Static, Literal, HasDefault
  Properties:
    ZedGraph.JapaneseCandleStick Stick 'get ' : 
  Methods:
    get_Stick(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    Draw(Graphics, GraphPane, Int32, Single): PrivateScope, Public, Virtual, HideBySig
    DrawLegendKey(Graphics, GraphPane, RectangleF, Single): PrivateScope, Public, Virtual, HideBySig
    GetCoords(GraphPane, Int32, String&(Out)): PrivateScope, Public, Virtual, HideBySig
Class ZedGraph.CollectionPlus: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Collections.CollectionBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IndexOf(Object): PrivateScope, Public, HideBySig
    Remove(Int32): PrivateScope, Public, HideBySig
    Remove(Object): PrivateScope, Public, HideBySig
    Move(Int32, Int32): PrivateScope, Public, HideBySig
Class ZedGraph.PointPair4: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.PointPair
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.PointPair4): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Double T : Public
    Int32 schema3 = 11 : Public, Static, Literal, HasDefault
  Properties:
    Boolean IsInvalid4D 'get ' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    get_IsInvalid4D(): PrivateScope, Public, HideBySig, SpecialName
    ToString(Boolean): PrivateScope, Public, HideBySig
    ToString(String, Boolean): PrivateScope, Public, HideBySig
    ToString(String, String, String, String): PrivateScope, Public, HideBySig
Class ZedGraph.LineItem: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.CurveItem
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Double[], Double[], System.Drawing.Color, ZedGraph.SymbolType, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Double[], Double[], System.Drawing.Color, ZedGraph.SymbolType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, ZedGraph.IPointList, System.Drawing.Color, ZedGraph.SymbolType, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, ZedGraph.IPointList, System.Drawing.Color, ZedGraph.SymbolType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.LineItem): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema2 = 10 : Public, Static, Literal, HasDefault
  Properties:
    ZedGraph.Symbol Symbol 'get set' : 
    ZedGraph.Line Line 'get set' : 
  Methods:
    get_Symbol(): PrivateScope, Public, HideBySig, SpecialName
    set_Symbol(Symbol): PrivateScope, Public, HideBySig, SpecialName
    get_Line(): PrivateScope, Public, HideBySig, SpecialName
    set_Line(Line): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    Draw(Graphics, GraphPane, Int32, Single): PrivateScope, Public, Virtual, HideBySig
    DrawLegendKey(Graphics, GraphPane, RectangleF, Single): PrivateScope, Public, Virtual, HideBySig
    MakeUnique(ColorSymbolRotator): PrivateScope, Public, Virtual, HideBySig
    GetCoords(GraphPane, Int32, String&(Out)): PrivateScope, Public, Virtual, HideBySig
Class ZedGraph.Legend: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.Legend): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
    System.Runtime.Serialization.ISerializable
  Fields:
    Int32 schema = 12 : Public, Static, Literal, HasDefault
  Properties:
    System.Drawing.RectangleF Rect 'get ' : 
    ZedGraph.FontSpec FontSpec 'get set' : 
    Boolean IsVisible 'get set' : 
    ZedGraph.Border Border 'get set' : 
    ZedGraph.Fill Fill 'get set' : 
    Boolean IsHStack 'get set' : 
    ZedGraph.LegendPos Position 'get set' : 
    ZedGraph.Location Location 'get set' : 
    Single Gap 'get set' : 
    Boolean IsReverse 'get set' : 
    Boolean IsShowLegendSymbols 'get set' : 
  Methods:
    get_Rect(): PrivateScope, Public, HideBySig, SpecialName
    get_FontSpec(): PrivateScope, Public, HideBySig, SpecialName
    set_FontSpec(FontSpec): PrivateScope, Public, HideBySig, SpecialName
    get_IsVisible(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVisible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Border(): PrivateScope, Public, HideBySig, SpecialName
    set_Border(Border): PrivateScope, Public, HideBySig, SpecialName
    get_Fill(): PrivateScope, Public, HideBySig, SpecialName
    set_Fill(Fill): PrivateScope, Public, HideBySig, SpecialName
    get_IsHStack(): PrivateScope, Public, HideBySig, SpecialName
    set_IsHStack(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(LegendPos): PrivateScope, Public, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(Location): PrivateScope, Public, HideBySig, SpecialName
    get_Gap(): PrivateScope, Public, HideBySig, SpecialName
    set_Gap(Single): PrivateScope, Public, HideBySig, SpecialName
    get_IsReverse(): PrivateScope, Public, HideBySig, SpecialName
    set_IsReverse(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsShowLegendSymbols(): PrivateScope, Public, HideBySig, SpecialName
    set_IsShowLegendSymbols(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    Draw(Graphics, PaneBase, Single): PrivateScope, Public, HideBySig
    FindPoint(PointF, PaneBase, Single, Int32&(Out)): PrivateScope, Public, HideBySig
    CalcRect(Graphics, PaneBase, Single, RectangleF&): PrivateScope, Public, HideBySig
Struct ZedGraph.Legend+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single BorderWidth : Public, Static
    System.Drawing.Color BorderColor : Public, Static
    System.Drawing.Color FillColor : Public, Static
    System.Drawing.Brush FillBrush : Public, Static
    ZedGraph.FillType FillType : Public, Static
    ZedGraph.LegendPos Position : Public, Static
    Boolean IsBorderVisible : Public, Static
    Boolean IsVisible : Public, Static
    Boolean IsFilled : Public, Static
    Boolean IsHStack : Public, Static
    System.String FontFamily : Public, Static
    Single FontSize : Public, Static
    System.Drawing.Color FontColor : Public, Static
    Boolean FontBold : Public, Static
    Boolean FontItalic : Public, Static
    Boolean FontUnderline : Public, Static
    System.Drawing.Color FontFillColor : Public, Static
    System.Drawing.Brush FontFillBrush : Public, Static
    ZedGraph.FillType FontFillType : Public, Static
    Single Gap : Public, Static
    Boolean IsReverse : Public, Static
    Boolean IsShowLegendSymbols : Public, Static
Struct ZedGraph.HSBColor: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte H : Public
    Byte S : Public
    Byte B : Public
    Byte A : Public
  Methods:
    op_Implicit(HSBColor): PrivateScope, Public, Static, HideBySig, SpecialName
    ToRGB(HSBColor): PrivateScope, Public, Static, HideBySig
    ToRGB(): PrivateScope, Public, HideBySig
    FromRGB(): PrivateScope, Public, HideBySig
    FromRGB(Color): PrivateScope, Public, Static, HideBySig
Class ZedGraph.StickItem: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :ZedGraph.LineItem
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Double[], Double[], System.Drawing.Color, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Double[], Double[], System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, ZedGraph.IPointList, System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, ZedGraph.IPointList, System.Drawing.Color, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.StickItem): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 schema3 = 10 : Public, Static, Literal, HasDefault
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
Class ZedGraph.Fill: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color, System.Drawing.Brush, ZedGraph.FillType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color, System.Drawing.Color, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color, System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color, System.Drawing.Color, System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color, System.Drawing.Color, System.Drawing.Color, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Drawing2D.ColorBlend): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Drawing2D.ColorBlend, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color[], Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color[], Single[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color[], Single[], Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Image, System.Drawing.Drawing2D.WrapMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Brush): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Brush, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Brush, ZedGraph.AlignH, ZedGraph.AlignV): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.Fill): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
    System.ICloneable
  Fields:
    Int32 schema = 10 : Public, Static, Literal, HasDefault
  Properties:
    System.Drawing.Color Color 'get set' : 
    System.Drawing.Color SecondaryValueGradientColor 'get set' : 
    System.Drawing.Brush Brush 'get set' : 
    ZedGraph.FillType Type 'get set' : 
    Boolean IsVisible 'get set' : 
    Boolean IsScaled 'get set' : 
    ZedGraph.AlignH AlignH 'get set' : 
    ZedGraph.AlignV AlignV 'get set' : 
    Boolean IsGradientValueType 'get ' : 
    Double RangeMin 'get set' : 
    Double RangeMax 'get set' : 
    Double RangeDefault 'get set' : 
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    set_Color(Color): PrivateScope, Public, HideBySig, SpecialName
    get_SecondaryValueGradientColor(): PrivateScope, Public, HideBySig, SpecialName
    set_SecondaryValueGradientColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_Brush(): PrivateScope, Public, HideBySig, SpecialName
    set_Brush(Brush): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(FillType): PrivateScope, Public, HideBySig, SpecialName
    get_IsVisible(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVisible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsScaled(): PrivateScope, Public, HideBySig, SpecialName
    set_IsScaled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AlignH(): PrivateScope, Public, HideBySig, SpecialName
    set_AlignH(AlignH): PrivateScope, Public, HideBySig, SpecialName
    get_AlignV(): PrivateScope, Public, HideBySig, SpecialName
    set_AlignV(AlignV): PrivateScope, Public, HideBySig, SpecialName
    get_IsGradientValueType(): PrivateScope, Public, HideBySig, SpecialName
    get_RangeMin(): PrivateScope, Public, HideBySig, SpecialName
    set_RangeMin(Double): PrivateScope, Public, HideBySig, SpecialName
    get_RangeMax(): PrivateScope, Public, HideBySig, SpecialName
    set_RangeMax(Double): PrivateScope, Public, HideBySig, SpecialName
    get_RangeDefault(): PrivateScope, Public, HideBySig, SpecialName
    set_RangeDefault(Double): PrivateScope, Public, HideBySig, SpecialName
    MakeBrush(RectangleF): PrivateScope, Public, HideBySig
    MakeBrush(RectangleF, PointPair): PrivateScope, Public, HideBySig
    Draw(Graphics, RectangleF): PrivateScope, Public, HideBySig
    Draw(Graphics, RectangleF, PointPair): PrivateScope, Public, HideBySig
Struct ZedGraph.Fill+Default: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Boolean IsScaled : Public, Static
    ZedGraph.AlignH AlignH : Public, Static
    ZedGraph.AlignV AlignV : Public, Static
Class ZedGraph.BasicArrayPointList: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(Double[], Double[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ZedGraph.BasicArrayPointList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ZedGraph.IPointList
    System.ICloneable
  Fields:
    Double[] x : Public
    Double[] y : Public
  Properties:
    ZedGraph.PointPair Item [Int32] 'get set' : 
    Int32 Count 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, PointPair): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Clone(): PrivateScope, Public, HideBySig
